# This is the GatewaysControlPlane API spec in YAML
# Clients and documentation will be auto-generated from this file.
# Review the API checklist:
# https://confluence.oci.oraclecorp.com/display/DEX/API+Consistency+Checklist
swagger: '2.0'
x-oracle-package: com.oracle.pic.apigw
x-obmcs-endpoint-template: 'https://apigateway.{region}.oci.{secondLevelDomain}'
x-obmcs-splat:
  version: '1.0'
  services:
###@ifdef UDX-1407
    ApiGateway:
      audit:
        defaultMode: automated
        eventSource: apigateway
##@endif # UDX-1407
##@ifdef stage
    ApiGatewayStage:
      audit:
        defaultMode: automated
        eventSource: apigatewaystage
##@endif # stage
##@ifdef integration
    ApiGatewayDev:
      audit:
        defaultMode: automated
        eventSource: apigatewaydev
##@endif # integration
        requestParameterRules: [ { resources: ".*", actions: ".*", values: ".*" } ]
        requestHeaderRules:    [ { resources: ".*", actions: ".*", values: ".*" } ]
        responseHeaderRules:   [ { resources: ".*", actions: ".*", values: ".*" } ]

info:
  title: API Gateway API
  description: |
    API for the API Gateway service. Use this API to manage gateways, deployments, and related items. 
    For more information, see
    [Overview of API Gateway](/iaas/Content/APIGateway/Concepts/apigatewayoverview.htm). 
  # Make sure that basePath(below) contains this version.
  version: "20190501"
# the domain of the service
host: 127.0.0.1
# array of all schemes that your API supports
schemes:
  - http
  - https
# will be prefixed to all paths. Make sure to update the path in resource files after modifying the basePath.
basePath: /20190501
produces:
  - application/json

x-obmcs-issue-routing-table:
  default:
    email: oci_apigw_ww_grp@oracle.com
    jiraProject: APIGW
    opsJiraProject: APIGW
    githubUsers:
      - owainlewis
      - sudhanshu-garg

# =============================================================================
# Anchors used to reference common headers, properties, ...etc...
# =============================================================================
x-anchors:
  x-headers:
    location: &ref-location
      description: |
        Location of the resource.
      type: string
      default: "null"
    etag: &ref-etag
      description: |
        For optimistic concurrency control. See `if-match`.
      type: string
      default: "null"
    opc-work-request-id: &ref-opc-work-request-id
      description: |
        The OCID of the work request. Use
        [GetWorkRequest](#/en/iaas/20190501/WorkRequests/GetWorkRequest) with
        this id to track the status
        of the request.
      type: string
      default: "null"
    opc-next-page: &ref-opc-next-page
      description: |
        For list pagination. When this header appears in the response,
        additional pages of results remain. For important details about how
        pagination works, see
        [List Pagination](/iaas/Content/API/Concepts/usingapi.htm#nine).
      type: string
      default: "null"
    opc-prev-page: &ref-opc-prev-page
      description: |
        For list pagination. When this header appears in the response,
        additional pages of results were seen previously. For important details
        about how pagination works, see
        [List Pagination](/iaas/Content/API/Concepts/usingapi.htm#nine).
      type: string
      default: "null"
    opc-request-id: &ref-opc-request-id
      description: |
        Unique Oracle-assigned identifier for the request. If you need to
        contact Oracle about a particular request, please provide the request
        id.
      type: string
      default: "null"
    retry-after: &ref-retry-after
      description: |
        A decimal number representing the number of seconds the client
        should wait before polling this endpoint again.
      type: number
      format: integer

  x-properties:
    ocid: &ref-ocid
      description: |
        The [OCID](/Content/General/Concepts/identifiers.htm) of the resource.
      maxLength: 255
      minLength: 1
      type: string
    compartmentOcid: &ref-compartmentOcid
      description: |
        The [OCID](/Content/General/Concepts/identifiers.htm) of the compartment in which the
        resource is created.
      maxLength: 255
      minLength: 1
      type: string
    subnetOcid: &ref-subnetOcid
      description: |
        The [OCID](/Content/General/Concepts/identifiers.htm) of the subnet in which
        related resources are created.
      maxLength: 255
      minLength: 1
      type: string
    functionOcid: &ref-functionOcid
      description: |
        The [OCID](/Content/General/Concepts/identifiers.htm) of the Oracle Functions function resource.
      maxLength: 255
      minLength: 1
      type: string
    displayName: &ref-displayName
      description: |
        A user-friendly name. Does not have to be unique, and it's changeable. 
        Avoid entering confidential information.

        Example: `My new resource`
      type: string
    definedTags: &ref-definedTags
      additionalProperties:
        additionalProperties:
          description: |
            The value of the tag. Only the String type is supported.
          type: object
        description: |
          Key-value pair representing a defined tag key and value, scoped to a
          namespace.

          Example: `{"CostCenter": "42"}`
        type: object
      description: |
        Defined tags for this resource. Each key is predefined and scoped to a
        namespace. For more information, see
        [Resource Tags](/Content/General/Concepts/resourcetags.htm).

        Example: `{"Operations": {"CostCenter": "42"}}`
      type: object
    freeformTags: &ref-freeformTags
      additionalProperties:
        type: string
      description: |
        Free-form tags for this resource. Each tag is a simple key-value pair
        with no predefined name, type, or namespace. For more information, see
        [Resource Tags](/Content/General/Concepts/resourcetags.htm).

        Example: `{"Department": "Finance"}`
      type: object
    timeCreated: &ref-timeCreated
      description: The time this resource was created. An RFC3339 formatted datetime string.
      type: string
      format: date-time
    timeUpdated: &ref-timeUpdated
      description: The time this resource was last updated. An RFC3339 formatted datetime string.
      type: string
      format: date-time

#==========[ Paths ]====================================================================================================
paths:
  /gateways:
    get:
      tags: ['gateway']
      x-obmcs-splat:
        operationType: GET
        routing:
          strategy: route-to-any-ad
        throttling:
          spectreLimitKey: apigw-gateway-list
        resources:
          gateway:
            serviceResourceName: Gateway
            actionKind: LIST
            permissions: ["API_GATEWAY_LIST"]
            targetCompartmentId: request.parameter.compartmentId
        authorization:
          mode: automated
          check: resources['gateway'].grantedPermissions.contains('API_GATEWAY_LIST')
          allowCrossTenancy: true
        audit:
          mode: automated
          eventNameOverride: listgateways
        serviceList:
###@ifdef UDX-1407
          - ApiGateway
##@endif # UDX-1407
##@ifdef stage
          - ApiGatewayStage
##@endif # stage
##@ifdef integration
          - ApiGatewayDev
##@endif # integration
        maximumAttemptCount: 3
      operationId: ListGateways
      x-related-resource: '#/definitions/GatewaySummary'
      summary: Gets a list of all Gateways in a compartment
      description: |
        Returns a list of gateways.
      parameters:
        - $ref: '#/parameters/CompartmentIdQueryParam'
        - $ref: '#/parameters/DisplayNameQueryParam'
        - $ref: '#/parameters/GatewayLifecycleStateQueryParam'
        - $ref: '#/parameters/PaginationLimitQueryParam'
        - $ref: '#/parameters/PaginationTokenQueryParam'
        - $ref: '#/parameters/SortOrderQueryParam'
        - $ref: '#/parameters/SortByQueryParam'
        - $ref: '#/parameters/RequestIdHeader'
      responses:
        200:
          description: A page of GatewaySummary objects.
          schema:
            $ref: '#/definitions/GatewayCollection'
          headers:
            opc-request-id: *ref-opc-request-id
            opc-next-page: *ref-opc-next-page
            opc-prev-page: *ref-opc-prev-page
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

    post:
      tags: ['gateway']
      x-obmcs-splat:
        apiType: Asynchronous
        routing:
          strategy: route-to-any-ad
        throttling:
          spectreLimitKey: apigw-gateway-create
        resources:
          gateway:
            serviceResourceName: Gateway
            actionKind: CREATE
            permissions: ["API_GATEWAY_CREATE"]
            targetCompartmentId: request.body.compartmentId
            freeformTags: request.body.freeformTags
            definedTags: request.body.definedTags
            forwardTagSlug: true
            reconciliationCanStartAfterSecs: 60
        authorization:
          mode: automated
          check: resources['gateway'].grantedPermissions.contains('API_GATEWAY_CREATE')
          allowCrossTenancy: true
        audit:
          mode: none
        quotas:
          mode: automated
          quotaDefinitions:
            gateway-count-quota:
              operationResourceName: gateway
              quotaName: "'gateway-count'"
              familyName: api-gateway
              usage: 1
              quotaHandlingMode: Enforce
        serviceList:
###@ifdef UDX-1407
          - ApiGateway
##@endif # UDX-1407
##@ifdef stage
          - ApiGatewayStage
##@endif # stage
##@ifdef integration
          - ApiGatewayDev
##@endif # integration
        maximumAttemptCount: 3
      operationId: CreateGateway
      summary: Creates a new Gateway
      description: |
        Creates a new gateway.
      parameters:
        - name: CreateGatewayDetails
          description: Details for the new gateway.
          required: true
          in: body
          schema:
            $ref: '#/definitions/CreateGatewayDetails'
        - $ref: '#/parameters/RetryTokenHeader'
        - $ref: '#/parameters/RequestIdHeader'
      responses:
        201:
          description: The gateway is being created.
          schema:
            $ref: '#/definitions/Gateway'
          headers:
            etag: *ref-etag
            opc-work-request-id: *ref-opc-work-request-id
            opc-request-id: *ref-opc-request-id
            location: *ref-location
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        409:
          $ref: '#/responses/409'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

  /gateways/{gatewayId}:
    get:
      tags: ['gateway']
      x-obmcs-splat:
        routing:
          strategy: route-to-any-ad
        throttling:
          spectreLimitKey: apigw-gateway-read
        resources:
          gateway:
            serviceResourceName: Gateway
            actionKind: READ
            permissions: ["API_GATEWAY_READ"]
###@ifdef UDX-1407
            targetCompartmentId: downstream.getOr404('ApiGateway','GetGateway', request.resourceId).compartmentId
            existingTags: downstream.getOr404('ApiGateway', 'GetGateway', request.resourceId).freeformTags.'.splatAuthorizedTagSlug'
##@endif # UDX-1407
##@ifdef stage
#            targetCompartmentId: downstream.getOr404('ApiGatewayStage','GetGateway', request.resourceId).compartmentId
#            existingTags: downstream.getOr404('ApiGatewayStage', 'GetGateway', request.resourceId).freeformTags.'.splatAuthorizedTagSlug'
##@endif # stage
##@ifdef integration
#            targetCompartmentId: downstream.getOr404('ApiGatewayDev','GetGateway', request.resourceId).compartmentId
#            existingTags: downstream.getOr404('ApiGatewayDev', 'GetGateway', request.resourceId).freeformTags.'.splatAuthorizedTagSlug'
##@endif # integration
        authorization:
          mode: automated
          check: resources['gateway'].grantedPermissions.contains('API_GATEWAY_READ')
          allowCrossTenancy: true
        audit:
          mode: automated
          eventNameOverride: getgateway
        serviceList:
###@ifdef UDX-1407
          - ApiGateway
##@endif # UDX-1407
##@ifdef stage
          - ApiGatewayStage
##@endif # stage
##@ifdef integration
          - ApiGatewayDev
##@endif # integration
        maximumAttemptCount: 3
      operationId: GetGateway
      summary: Get Gateway
      description: Gets a gateway by identifier.
      parameters:
        - $ref: '#/parameters/GatewayIdentifierPathParam'
        - $ref: '#/parameters/RequestIdHeader'
      responses:
        200:
          description: Retrieves the gateway with the given identifier.
          schema:
            $ref: '#/definitions/Gateway'
          headers:
            etag: *ref-etag
            opc-request-id: *ref-opc-request-id
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

    put:
      tags: ['gateway']
      x-obmcs-splat:
        apiType: Asynchronous
        routing:
          strategy: route-to-any-ad
        throttling:
          spectreLimitKey: apigw-gateway-update
        resources:
          gateway:
            serviceResourceName: Gateway
            actionKind: UPDATE
            permissions: ["API_GATEWAY_UPDATE"]
            definedTags: request.body.definedTags
            freeformTags: request.body.freeformTags
            forwardTagSlug: true
###@ifdef UDX-1407
            targetCompartmentId: downstream.getOr404('ApiGateway','GetGateway', request.resourceId).compartmentId
            existingTags: downstream.getOr404('ApiGateway', 'GetGateway', request.resourceId).freeformTags.'.splatAuthorizedTagSlug'
            existingResourceExpression: downstream.getOr404('ApiGateway', 'GetGateway', request.resourceId)
##@endif # UDX-1407
##@ifdef stage
#            targetCompartmentId: downstream.getOr404('ApiGatewayStage','GetGateway', request.resourceId).compartmentId
#            existingTags: downstream.getOr404('ApiGatewayStage', 'GetGateway', request.resourceId).freeformTags.'.splatAuthorizedTagSlug'
#            existingResourceExpression: downstream.getOr404('ApiGatewayStage', 'GetGateway', request.resourceId)
##@endif # stage
##@ifdef integration
#            targetCompartmentId: downstream.getOr404('ApiGatewayDev','GetGateway', request.resourceId).compartmentId
#            existingTags: downstream.getOr404('ApiGatewayDev', 'GetGateway', request.resourceId).freeformTags.'.splatAuthorizedTagSlug'
#            existingResourceExpression: downstream.getOr404('ApiGatewayDev', 'GetGateway', request.resourceId)
##@endif # integration
        authorization:
          mode: automated
          check: resources['gateway'].grantedPermissions.contains('API_GATEWAY_UPDATE')
          allowCrossTenancy: true
        audit:
          mode: none
        serviceList:
###@ifdef UDX-1407
          - ApiGateway
##@endif # UDX-1407
##@ifdef stage
#          - ApiGatewayStage
##@endif # stage
##@ifdef integration
#          - ApiGatewayDev
##@endif # integration
        maximumAttemptCount: 3
      operationId: UpdateGateway
      x-related-resource: '#/definitions/Gateway'
      summary: Update the Gateway by the identifier
      description: Updates the gateway with the given identifier.
      parameters:
        - $ref: '#/parameters/GatewayIdentifierPathParam'
        - name: UpdateGatewayDetails
          description: The information to be updated.
          required: true
          in: body
          schema:
            $ref: '#/definitions/UpdateGatewayDetails'
        - $ref: '#/parameters/IfMatchHeader'
        - $ref: '#/parameters/RequestIdHeader'
      responses:
        202:
          description: The gateway will be updated.
          headers:
            opc-work-request-id: *ref-opc-work-request-id
            opc-request-id: *ref-opc-request-id
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

    delete:
      tags: ['gateway']
      x-obmcs-splat:
        apiType: Asynchronous
        routing:
          strategy: route-to-any-ad
        throttling:
          spectreLimitKey: apigw-gateway-delete
        resources:
          gateway:
            serviceResourceName: Gateway
            actionKind: DELETE
            permissions: ["API_GATEWAY_DELETE"]
            resourceOcid: request.resourceId
            reconciliationCanStartAfterSecs: 60
###@ifdef UDX-1407
            targetCompartmentId: downstream.getOr404('ApiGateway','GetGateway', request.resourceId).compartmentId
            existingTags: downstream.getOr404('ApiGateway', 'GetGateway', request.resourceId).freeformTags.'.splatAuthorizedTagSlug'
            existingResourceExpression: downstream.getOr404('ApiGateway', 'GetGateway', request.resourceId)
##@endif # UDX-1407
##@ifdef stage
#            targetCompartmentId: downstream.getOr404('ApiGatewayStage','GetGateway', request.resourceId).compartmentId
#            existingTags: downstream.getOr404('ApiGatewayStage', 'GetGateway', request.resourceId).freeformTags.'.splatAuthorizedTagSlug'
#            existingResourceExpression: downstream.getOr404('ApiGatewayStage', 'GetGateway', request.resourceId)
##@endif # stage
##@ifdef integration
#            targetCompartmentId: downstream.getOr404('ApiGatewayDev','GetGateway', request.resourceId).compartmentId
#            existingTags: downstream.getOr404('ApiGatewayDev', 'GetGateway', request.resourceId).freeformTags.'.splatAuthorizedTagSlug'
#            existingResourceExpression: downstream.getOr404('ApiGatewayDev', 'GetGateway', request.resourceId)
##@endif # integration
        authorization:
          mode: automated
          check: resources['gateway'].grantedPermissions.contains('API_GATEWAY_DELETE')
          allowCrossTenancy: true
        audit:
          mode: none
        quotas:
          mode: automated
        serviceList:
###@ifdef UDX-1407
          - ApiGateway
##@endif # UDX-1407
##@ifdef stage
#          - ApiGatewayStage
##@endif # stage
##@ifdef integration
#          - ApiGatewayDev
##@endif # integration
        maximumAttemptCount: 3
      operationId: DeleteGateway
      x-related-resource: '#/definitions/Gateway'
      summary: Delete a provisioned Gateway
      description: Deletes the gateway with the given identifier.
      parameters:
        - $ref: '#/parameters/GatewayIdentifierPathParam'
        - $ref: '#/parameters/IfMatchHeader'
        - $ref: '#/parameters/RequestIdHeader'
      responses:
        202:
          description: The gateway will be deleted.
          headers:
            opc-work-request-id: *ref-opc-work-request-id
            opc-request-id: *ref-opc-request-id
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

  /gateways/{gatewayId}/actions/changeCompartment:
    post:
      tags: ['gateway']
      x-obmcs-splat:
        routing:
          strategy: route-to-any-ad
        throttling:
          spectreLimitKey: apigw-gateway-update
        resources:
          gateway-source-compartment:
            serviceResourceName: Gateway
            actionKind: READ
            resourceOcid: request.resourceId
            reconciliationCanStartAfterSecs: 60
            permissions: ["API_GATEWAY_MOVE"]
###@ifdef UDX-1407
            targetCompartmentId: downstream.getOr404('ApiGateway','GetGateway', request.resourceId).compartmentId
            existingTags: downstream.getOr404('ApiGateway', 'GetGateway', request.resourceId).freeformTags.'.splatAuthorizedTagSlug'
            existingResourceExpression: downstream.getOr404('ApiGateway', 'GetGateway', request.resourceId)
##@endif # UDX-1407
##@ifdef stage
#            targetCompartmentId: downstream.getOr404('ApiGatewayStage','GetGateway', request.resourceId).compartmentId
#            existingTags: downstream.getOr404('ApiGatewayStage', 'GetGateway', request.resourceId).freeformTags.'.splatAuthorizedTagSlug'
#            existingResourceExpression: downstream.getOr404('ApiGatewayStage', 'GetGateway', request.resourceId)
##@endif # stage
##@ifdef integration
#            targetCompartmentId: downstream.getOr404('ApiGatewayDev','GetGateway', request.resourceId).compartmentId
#            existingTags: downstream.getOr404('ApiGatewayDev', 'GetGateway', request.resourceId).freeformTags.'.splatAuthorizedTagSlug'
#            existingResourceExpression: downstream.getOr404('ApiGatewayDev', 'GetGateway', request.resourceId)
##@endif # integration
          gateway-new-compartment:
            serviceResourceName: Gateway
            actionKind: MOVE
            resourceOcid: request.resourceId
            reconciliationCanStartAfterSecs: 60
            targetCompartmentId: request.body.compartmentId
            permissions: ["API_GATEWAY_MOVE"]
###@ifdef UDX-1407
            existingTags: downstream.getOr404('ApiGateway', 'GetGateway', request.resourceId).freeformTags.'.splatAuthorizedTagSlug'
            existingResourceExpression: downstream.getOr404('ApiGateway', 'GetGateway', request.resourceId)
##@endif # UDX-1407
##@ifdef stage
#            existingTags: downstream.getOr404('ApiGatewayStage', 'GetGateway', request.resourceId).freeformTags.'.splatAuthorizedTagSlug'
#            existingResourceExpression: downstream.getOr404('ApiGatewayStage', 'GetGateway', request.resourceId)
##@endif # stage
##@ifdef integration
#            existingTags: downstream.getOr404('ApiGatewayDev', 'GetGateway', request.resourceId).freeformTags.'.splatAuthorizedTagSlug'
#            existingResourceExpression: downstream.getOr404('ApiGatewayDev', 'GetGateway', request.resourceId)
##@endif # integration
        authorization:
            mode: automated
            check: >-
              resources['gateway-source-compartment'].grantedPermissions.contains('API_GATEWAY_MOVE') &&
              resources['gateway-new-compartment'].grantedPermissions.contains('API_GATEWAY_MOVE')
            allowCrossTenancy: true
            sameTenancyResources: ["gateway-source-compartment", "gateway-new-compartment"]
            crossTenancyAssociations: []
        audit:
          mode: none
        quotas:
          mode: automated
        serviceList:
###@ifdef UDX-1407
          - ApiGateway
##@endif # UDX-1407
##@ifdef stage
#          - ApiGatewayStage
##@endif # stage
##@ifdef integration
#          - ApiGatewayDev
##@endif # integration
        maximumAttemptCount: 3
      operationId: ChangeGatewayCompartment
      summary: Change the gateway compartment.
      description: Changes the gateway compartment.
      x-related-resource: '#/definitions/Gateway'
      parameters:
        - $ref: '#/parameters/GatewayIdentifierPathParam'
        - name: ChangeGatewayCompartmentDetails
          description: Details of the target compartment.
          required: true
          in: body
          schema:
            $ref: '#/definitions/ChangeGatewayCompartmentDetails'
        - $ref: '#/parameters/RetryTokenHeader'
        - $ref: '#/parameters/IfMatchHeader'
        - $ref: '#/parameters/RequestIdHeader'
      responses:
        202:
          description: The gateway's compartment will be changed.
          headers:
            opc-work-request-id: *ref-opc-work-request-id
            opc-request-id: *ref-opc-request-id
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        412:
          $ref: '#/responses/412'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

  /deployments:
    get:
      tags: ['deployment']
      x-obmcs-splat:
        operationType: GET
        routing:
          strategy: route-to-any-ad
        throttling:
          spectreLimitKey: apigw-deployment-list
        resources:
          deployment:
            serviceResourceName: Deployment
            actionKind: LIST
            permissions: ["API_DEPLOYMENT_LIST"]
            targetCompartmentId: request.parameter.compartmentId
        authorization:
          mode: automated
          check: resources['deployment'].grantedPermissions.contains('API_DEPLOYMENT_LIST')
          allowCrossTenancy: true
        audit:
          mode: automated
          eventNameOverride: listdeployments
        serviceList:
###@ifdef UDX-1407
          - ApiGateway
##@endif # UDX-1407
##@ifdef stage
#          - ApiGatewayStage
##@endif # stage
##@ifdef integration
#          - ApiGatewayDev
##@endif # integration
        maximumAttemptCount: 3
      operationId: ListDeployments
      summary: Gets a list of all Deployments in a compartment
      description: |
        Returns a list of deployments.
      x-related-resource: '#/definitions/DeploymentSummary'
      parameters:
        - $ref: '#/parameters/CompartmentIdQueryParam'
        - $ref: '#/parameters/GatewayIdQueryParam'
        - $ref: '#/parameters/DisplayNameQueryParam'
        - $ref: '#/parameters/DeploymentLifecycleStateQueryParam'
        - $ref: '#/parameters/PaginationLimitQueryParam'
        - $ref: '#/parameters/PaginationTokenQueryParam'
        - $ref: '#/parameters/SortOrderQueryParam'
        - $ref: '#/parameters/SortByQueryParam'
        - $ref: '#/parameters/RequestIdHeader'
      responses:
        200:
          description: A page of DeploymentSummary objects.
          schema:
            $ref: '#/definitions/DeploymentCollection'
          headers:
            opc-request-id: *ref-opc-request-id
            opc-next-page: *ref-opc-next-page
            opc-prev-page: *ref-opc-prev-page
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

    post:
      tags: ['deployment']
      x-obmcs-splat:
        apiType: Asynchronous
        routing:
          strategy: route-to-any-ad
        throttling:
          spectreLimitKey: apigw-deployment-create
        resources:
          deployment:
            serviceResourceName: Deployment
            actionKind: CREATE
            permissions: ["API_DEPLOYMENT_CREATE"]
            targetCompartmentId: request.body.compartmentId
            forwardTagSlug: true
            freeformTags: request.body.freeformTags
            definedTags: request.body.definedTags
          gateway:
            serviceResourceName: Gateway
            actionKind: CREATE
            permissions: ["API_GATEWAY_READ" , "API_GATEWAY_ADD_DEPLOYMENT"]
###@ifdef UDX-1407
            targetCompartmentId: "downstream.tryGet('ApiGateway','GetGateway', request.body.gatewayId ?: 'none').orThrow('RelatedResourceNotAuthorizedOrNotFound','gatewayId is missing or invalid').compartmentId"
##@endif # UDX-1407
##@ifdef stage
#            targetCompartmentId: "downstream.tryGet('ApiGatewayStage','GetGateway', request.body.gatewayId ?: 'none').orThrow('RelatedResourceNotAuthorizedOrNotFound','gatewayId is missing or invalid').compartmentId"
##@endif # stage
##@ifdef integration
#            targetCompartmentId: "downstream.tryGet('ApiGatewayDev','GetGateway', request.body.gatewayId ?: 'none').orThrow('RelatedResourceNotAuthorizedOrNotFound','gatewayId is missing or invalid').compartmentId"
##@endif # integration
        authorization:
          mode: automated
          check: >-
            resources['gateway'].grantedPermissions.contains('API_GATEWAY_READ') &&
            resources['gateway'].grantedPermissions.contains('API_GATEWAY_ADD_DEPLOYMENT') &&
            resources['deployment'].grantedPermissions.contains('API_DEPLOYMENT_CREATE')
          allowCrossTenancy: true
          sameTenancyResources: []
          crossTenancyAssociations: [["deployment", "gateway"]]
        audit:
          mode: none
        serviceList:
##@ifdef UDX-1407
          - ApiGateway
#@endif # UDX-1407
#@ifdef stage
          - ApiGatewayStage
#@endif # stage
#@ifdef integration
          - ApiGatewayDev
#@endif # integration
        maximumAttemptCount: 3
      operationId: CreateDeployment
      summary: Creates a new Deployment
      description: |
        Creates a new deployment.
      parameters:
        - name: CreateDeploymentDetails
          description: Details for the new deployment
          required: true
          in: body
          schema:
            $ref: '#/definitions/CreateDeploymentDetails'
        - $ref: '#/parameters/RetryTokenHeader'
        - $ref: '#/parameters/RequestIdHeader'
      responses:
        201:
          description:  The deployment is being created.
          schema:
            $ref: '#/definitions/Deployment'
          headers:
            etag: *ref-etag
            opc-work-request-id: *ref-opc-work-request-id
            opc-request-id: *ref-opc-request-id
            location: *ref-location
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        409:
          $ref: '#/responses/409'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

  /deployments/{deploymentId}:
    get:
      tags: ['deployment']
      x-obmcs-splat:
        routing:
          strategy: route-to-any-ad
        throttling:
          spectreLimitKey: apigw-deployment-read
        resources:
          deployment:
            serviceResourceName: Deployment
            actionKind: READ
            permissions: ["API_DEPLOYMENT_READ"]
##@ifdef UDX-1407
            targetCompartmentId: downstream.getOr404('ApiGateway','GetDeployment', request.resourceId).compartmentId
            existingTags: downstream.getOr404('ApiGateway', 'GetDeployment', request.resourceId).freeformTags.'.splatAuthorizedTagSlug'
#@endif # UDX-1407
#@ifdef stage
#            targetCompartmentId: downstream.getOr404('ApiGatewayStage','GetDeployment', request.resourceId).compartmentId
#            existingTags: downstream.getOr404('ApiGatewayStage', 'GetDeployment', request.resourceId).freeformTags.'.splatAuthorizedTagSlug'
#@endif # stage
#@ifdef integration
#            targetCompartmentId: downstream.getOr404('ApiGatewayDev','GetDeployment', request.resourceId).compartmentId
#            existingTags: downstream.getOr404('ApiGatewayDev', 'GetDeployment', request.resourceId).freeformTags.'.splatAuthorizedTagSlug'
#@endif # integration
          gateway:
            serviceResourceName: Gateway
            actionKind: READ
            permissions: ["API_GATEWAY_READ"]
##@ifdef UDX-1407
            targetCompartmentId: downstream.getOr404('ApiGateway','GetGateway', downstream.getOr404('ApiGateway','GetDeployment', request.resourceId).gatewayId).compartmentId
            existingTags: downstream.getOr404('ApiGateway', 'GetGateway', downstream.getOr404('ApiGateway','GetDeployment', request.resourceId).gatewayId).freeformTags.'.splatAuthorizedTagSlug'
#@endif # UDX-1407
#@ifdef stage
#            targetCompartmentId: downstream.getOr404('ApiGatewayStage','GetGateway', downstream.getOr404('ApiGatewayStage','GetDeployment', request.resourceId).gatewayId).compartmentId
#            existingTags: downstream.getOr404('ApiGatewayStage', 'GetGateway', downstream.getOr404('ApiGatewayStage','GetDeployment', request.resourceId).gatewayId).freeformTags.'.splatAuthorizedTagSlug'
#@endif # stage
#@ifdef integration
#            targetCompartmentId: downstream.getOr404('ApiGatewayDev','GetGateway', downstream.getOr404('ApiGatewayDev','GetDeployment', request.resourceId).gatewayId).compartmentId
#            existingTags: downstream.getOr404('ApiGatewayDev', 'GetGateway', downstream.getOr404('ApiGatewayDev','GetDeployment', request.resourceId).gatewayId).freeformTags.'.splatAuthorizedTagSlug'
#@endif # integration
        authorization:
          mode: automated
          check: >-
            resources['gateway'].grantedPermissions.contains('API_GATEWAY_READ') &&
            resources['deployment'].grantedPermissions.contains('API_DEPLOYMENT_READ')
          allowCrossTenancy: true
          sameTenancyResources: []
          crossTenancyAssociations: [["deployment", "gateway"]]
        audit:
          mode: automated
          eventNameOverride: getdeployment
        serviceList:
##@ifdef UDX-1407
          - ApiGateway
#@endif # UDX-1407
#@ifdef stage
          - ApiGatewayStage
#@endif # stage
#@ifdef integration
          - ApiGatewayDev
#@endif # integration
        maximumAttemptCount: 3
      operationId: GetDeployment
      summary: Get Deployment
      description: Gets a deployment by identifier.
      parameters:
        - $ref: '#/parameters/DeploymentIdentifierPathParam'
        - $ref: '#/parameters/RequestIdHeader'
      responses:
        200:
          description: Retrieves the deployment with the given identifier.
          schema:
            $ref: '#/definitions/Deployment'
          headers:
            etag: *ref-etag
            opc-request-id: *ref-opc-request-id
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

    put:
      tags: ['deployment']
      x-obmcs-splat:
        apiType: Asynchronous
        routing:
          strategy: route-to-any-ad
        throttling:
          spectreLimitKey: apigw-deployment-update
        resources:
          deployment:
            serviceResourceName: Deployment
            actionKind: UPDATE
            permissions: ["API_DEPLOYMENT_UPDATE"]
            forwardTagSlug: true
            freeformTags: request.body.freeformTags
            definedTags: request.body.definedTags
##@ifdef UDX-1407
            targetCompartmentId: downstream.getOr404('ApiGateway','GetDeployment', request.resourceId).compartmentId
            existingTags: downstream.getOr404('ApiGateway', 'GetDeployment', request.resourceId).freeformTags.'.splatAuthorizedTagSlug'
            existingResourceExpression: downstream.getOr404('ApiGateway', 'GetDeployment', request.resourceId)
#@endif # UDX-1407
#@ifdef stage
#            targetCompartmentId: downstream.getOr404('ApiGatewayStage','GetDeployment', request.resourceId).compartmentId
#            existingTags: downstream.getOr404('ApiGatewayStage', 'GetDeployment', request.resourceId).freeformTags.'.splatAuthorizedTagSlug'
#            existingResourceExpression: downstream.getOr404('ApiGatewayStage', 'GetDeployment', request.resourceId)
#@endif # stage
#@ifdef integration
#            targetCompartmentId: downstream.getOr404('ApiGatewayDev','GetDeployment', request.resourceId).compartmentId
#            existingTags: downstream.getOr404('ApiGatewayDev', 'GetDeployment', request.resourceId).freeformTags.'.splatAuthorizedTagSlug'
#            existingResourceExpression: downstream.getOr404('ApiGatewayDev', 'GetDeployment', request.resourceId)
#@endif # integration
          gateway:
            serviceResourceName: Gateway
            actionKind: UPDATE
            permissions: ["API_GATEWAY_READ" , "API_GATEWAY_ADD_DEPLOYMENT"]
##@ifdef UDX-1407
            targetCompartmentId: downstream.getOr404('ApiGateway','GetGateway', downstream.getOr404('ApiGateway','GetDeployment', request.resourceId).gatewayId).compartmentId
            existingTags: downstream.getOr404('ApiGateway', 'GetGateway', downstream.getOr404('ApiGateway','GetDeployment', request.resourceId).gatewayId).freeformTags.'.splatAuthorizedTagSlug'
#@endif # UDX-1407
#@ifdef stage
#            targetCompartmentId: downstream.getOr404('ApiGatewayStage','GetGateway', downstream.getOr404('ApiGatewayStage','GetDeployment', request.resourceId).gatewayId).compartmentId
#            existingTags: downstream.getOr404('ApiGatewayStage', 'GetGateway', downstream.getOr404('ApiGatewayStage','GetDeployment', request.resourceId).gatewayId).freeformTags.'.splatAuthorizedTagSlug'

#@endif # stage
#@ifdef integration
#            targetCompartmentId: downstream.getOr404('ApiGatewayDev','GetGateway', downstream.getOr404('ApiGatewayDev','GetDeployment', request.resourceId).gatewayId).compartmentId
#            existingTags: downstream.getOr404('ApiGatewayDev', 'GetGateway', downstream.getOr404('ApiGatewayDev','GetDeployment', request.resourceId).gatewayId).freeformTags.'.splatAuthorizedTagSlug'
#@endif # integration
        authorization:
          mode: automated
          check: >-
            resources['gateway'].grantedPermissions.contains('API_GATEWAY_READ') &&
            resources['gateway'].grantedPermissions.contains('API_GATEWAY_ADD_DEPLOYMENT') &&
            resources['deployment'].grantedPermissions.contains('API_DEPLOYMENT_UPDATE')
          allowCrossTenancy: true
          sameTenancyResources: []
          crossTenancyAssociations: [["deployment", "gateway"]]
        audit:
          mode: none
        serviceList:
##@ifdef UDX-1407
          - ApiGateway
#@endif # UDX-1407
#@ifdef stage
          - ApiGatewayStage
#@endif # stage
#@ifdef integration
          - ApiGatewayDev
#@endif # integration
        maximumAttemptCount: 3
      operationId: UpdateDeployment
      x-related-resource: '#/definitions/Deployment'
      summary: Update the Deployment identified by the id
      description: Updates the deployment with the given identifier.
      parameters:
        - $ref: '#/parameters/DeploymentIdentifierPathParam'
        - name: UpdateDeploymentDetails
          description: The information to be updated.
          required: true
          in: body
          schema:
            $ref: '#/definitions/UpdateDeploymentDetails'
        - $ref: '#/parameters/IfMatchHeader'
        - $ref: '#/parameters/RequestIdHeader'
      responses:
        202:
          description:  The deployment will be updated.
          headers:
            opc-work-request-id: *ref-opc-work-request-id
            opc-request-id: *ref-opc-request-id
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

    delete:
      tags: ['deployment']
      x-obmcs-splat:
        apiType: Asynchronous
        routing:
          strategy: route-to-any-ad
        throttling:
          spectreLimitKey: apigw-deployment-delete
        resources:
          deployment:
            serviceResourceName: Deployment
            actionKind: DELETE
            permissions: ["API_DEPLOYMENT_DELETE"]
##@ifdef UDX-1407
            targetCompartmentId: downstream.getOr404('ApiGateway','GetDeployment', request.resourceId).compartmentId
            existingTags: downstream.getOr404('ApiGateway', 'GetDeployment', request.resourceId).freeformTags.'.splatAuthorizedTagSlug'
            existingResourceExpression: downstream.getOr404('ApiGateway', 'GetDeployment', request.resourceId)
#@endif # UDX-1407
#@ifdef stage
#            targetCompartmentId: downstream.getOr404('ApiGatewayStage','GetDeployment', request.resourceId).compartmentId
#            existingTags: downstream.getOr404('ApiGatewayStage', 'GetDeployment', request.resourceId).freeformTags.'.splatAuthorizedTagSlug'
#            existingResourceExpression: downstream.getOr404('ApiGatewayStage', 'GetDeployment', request.resourceId)
#@endif # stage
#@ifdef integration
#            targetCompartmentId: downstream.getOr404('ApiGatewayDev','GetDeployment', request.resourceId).compartmentId
#            existingTags: downstream.getOr404('ApiGatewayDev', 'GetDeployment', request.resourceId).freeformTags.'.splatAuthorizedTagSlug'
#            existingResourceExpression: downstream.getOr404('ApiGatewayDev', 'GetDeployment', request.resourceId)
#@endif # integration
          gateway:
            serviceResourceName: Gateway
            actionKind: DELETE
            permissions: ["API_GATEWAY_READ" , "API_GATEWAY_REMOVE_DEPLOYMENT"]
##@ifdef UDX-1407
            targetCompartmentId: downstream.getOr404('ApiGateway','GetGateway', downstream.getOr404('ApiGateway','GetDeployment', request.resourceId).gatewayId).compartmentId
            existingTags: downstream.getOr404('ApiGateway', 'GetGateway', downstream.getOr404('ApiGateway','GetDeployment', request.resourceId).gatewayId).freeformTags.'.splatAuthorizedTagSlug'
#@endif # UDX-1407
#@ifdef stage
#            targetCompartmentId: downstream.getOr404('ApiGatewayStage','GetGateway', downstream.getOr404('ApiGatewayStage','GetDeployment', request.resourceId).gatewayId).compartmentId
#            existingTags: downstream.getOr404('ApiGatewayStage', 'GetGateway', downstream.getOr404('ApiGatewayStage','GetDeployment', request.resourceId).gatewayId).freeformTags.'.splatAuthorizedTagSlug'
#@endif # stage
#@ifdef integration
#            targetCompartmentId: downstream.getOr404('ApiGatewayDev','GetGateway', downstream.getOr404('ApiGatewayDev','GetDeployment', request.resourceId).gatewayId).compartmentId
#            existingTags: downstream.getOr404('ApiGatewayDev', 'GetGateway', downstream.getOr404('ApiGatewayDev','GetDeployment', request.resourceId).gatewayId).freeformTags.'.splatAuthorizedTagSlug'
#@endif # integration
        authorization:
          mode: automated
          check: >-
            resources['gateway'].grantedPermissions.contains('API_GATEWAY_READ') &&
            resources['gateway'].grantedPermissions.contains('API_GATEWAY_REMOVE_DEPLOYMENT') &&
            resources['deployment'].grantedPermissions.contains('API_DEPLOYMENT_DELETE')
          allowCrossTenancy: true
          sameTenancyResources: []
          crossTenancyAssociations: [["deployment", "gateway"]]
        audit:
          mode: none
        serviceList:
##@ifdef UDX-1407
          - ApiGateway
#@endif # UDX-1407
#@ifdef stage
          - ApiGatewayStage
#@endif # stage
#@ifdef integration
          - ApiGatewayDev
#@endif # integration
        maximumAttemptCount: 3
      operationId: DeleteDeployment
      x-related-resource: '#/definitions/Deployment'
      summary: Delete a provisioned Deployment
      description: Deletes the deployment with the given identifier.
      parameters:
        - $ref: '#/parameters/DeploymentIdentifierPathParam'
        - $ref: '#/parameters/IfMatchHeader'
        - $ref: '#/parameters/RequestIdHeader'
      responses:
        202:
          description: Accepted the request. The deployment will be deleted.
          headers:
            opc-work-request-id: *ref-opc-work-request-id
            opc-request-id: *ref-opc-request-id
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

  /deployments/{deploymentId}/actions/changeCompartment:
    post:
      tags: ['deployment']
      x-obmcs-splat:
        routing:
          strategy: route-to-any-ad
        throttling:
          spectreLimitKey: apigw-deployment-update
        resources:
          deployment-source-compartment:
            serviceResourceName: Deployment
            actionKind: UPDATE
            permissions: ["API_DEPLOYMENT_MOVE"]
##@ifdef UDX-1407
            targetCompartmentId: downstream.getOr404('ApiGateway','GetDeployment', request.resourceId).compartmentId
            existingTags: downstream.getOr404('ApiGateway', 'GetDeployment', request.resourceId).freeformTags.'.splatAuthorizedTagSlug'
            existingResourceExpression: downstream.getOr404('ApiGateway', 'GetDeployment', request.resourceId)
#@endif # UDX-1407
#@ifdef stage
#            targetCompartmentId: downstream.getOr404('ApiGatewayStage','GetDeployment', request.resourceId).compartmentId
#            existingTags: downstream.getOr404('ApiGatewayStage', 'GetDeployment', request.resourceId).freeformTags.'.splatAuthorizedTagSlug'
#            existingResourceExpression: downstream.getOr404('ApiGatewayStage', 'GetDeployment', request.resourceId)
#@endif # stage
#@ifdef integration
#            targetCompartmentId: downstream.getOr404('ApiGatewayDev','GetDeployment', request.resourceId).compartmentId
#            existingTags: downstream.getOr404('ApiGatewayDev', 'GetDeployment', request.resourceId).freeformTags.'.splatAuthorizedTagSlug'
#            existingResourceExpression: downstream.getOr404('ApiGatewayDev', 'GetDeployment', request.resourceId)
#@endif # integration
          deployment-new-compartment:
            serviceResourceName: Deployment
            actionKind: UPDATE
            targetCompartmentId: request.body.compartmentId
            permissions: ["API_DEPLOYMENT_MOVE"]
##@ifdef UDX-1407
            existingTags: downstream.getOr404('ApiGateway', 'GetDeployment', request.resourceId).freeformTags.'.splatAuthorizedTagSlug'
            existingResourceExpression: downstream.getOr404('ApiGateway', 'GetDeployment', request.resourceId)
#@endif # UDX-1407
#@ifdef stage
#            existingTags: downstream.getOr404('ApiGatewayStage', 'GetDeployment', request.resourceId).freeformTags.'.splatAuthorizedTagSlug'
#            existingResourceExpression: downstream.getOr404('ApiGatewayStage', 'GetDeployment', request.resourceId)
#@endif # stage
#@ifdef integration
#            existingTags: downstream.getOr404('ApiGatewayDev', 'GetDeployment', request.resourceId).freeformTags.'.splatAuthorizedTagSlug'
#            existingResourceExpression: downstream.getOr404('ApiGatewayDev', 'GetDeployment', request.resourceId)
#@endif # integration
        authorization:
          mode: automated
          check: >-
            resources['deployment-source-compartment'].grantedPermissions.contains('API_DEPLOYMENT_MOVE') &&
            resources['deployment-new-compartment'].grantedPermissions.contains('API_DEPLOYMENT_MOVE')
          allowCrossTenancy: true
          sameTenancyResources: ["deployment-source-compartment", "deployment-new-compartment"]
          crossTenancyAssociations: []
        audit:
          mode: none
        serviceList:
##@ifdef UDX-1407
          - ApiGateway
#@endif # UDX-1407
#@ifdef stage
          - ApiGatewayStage
#@endif # stage
#@ifdef integration
          - ApiGatewayDev
#@endif # integration
        maximumAttemptCount: 3
      operationId: ChangeDeploymentCompartment
      summary: Change the deployment compartment.
      description: Changes the deployment compartment.
      x-related-resource: '#/definitions/Deployment'
      parameters:
        - $ref: '#/parameters/DeploymentIdentifierPathParam'
        - name: ChangeDeploymentCompartmentDetails
          description: Details of the target compartment.
          required: true
          in: body
          schema:
            $ref: '#/definitions/ChangeDeploymentCompartmentDetails'
        - $ref: '#/parameters/RetryTokenHeader'
        - $ref: '#/parameters/IfMatchHeader'
        - $ref: '#/parameters/RequestIdHeader'
      responses:
        202:
          description: The deployment's compartment will be changed.
          headers:
            opc-work-request-id: *ref-opc-work-request-id
            opc-request-id: *ref-opc-request-id
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        412:
          $ref: '#/responses/412'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

# ------------------- Work Requests ------------------------------
  /workRequests/{workRequestId}:
    get:
      tags: ['workRequests']
      x-obmcs-splat:
        routing:
          strategy: route-to-any-ad
        throttling:
          spectreLimitKey: apigw-workrequest-read
        resources:
          workrequest:
            serviceResourceName: WorkRequest
            actionKind: READ
            permissions: ["API_WORK_REQUEST_READ"]
##@ifdef UDX-1407
            targetCompartmentId: downstream.getOr404('ApiGateway','GetWorkRequest', request.resourceId).compartmentId
#@endif # UDX-1407
#@ifdef stage
#            targetCompartmentId: downstream.getOr404('ApiGatewayStage','GetWorkRequest', request.resourceId).compartmentId
#@endif # stage
#@ifdef integration
#            targetCompartmentId: downstream.getOr404('ApiGatewayDev','GetWorkRequest', request.resourceId).compartmentId
#@endif # integration
        authorization:
          mode: automated
          check: resources['workrequest'].grantedPermissions.contains('API_WORK_REQUEST_READ')
          allowCrossTenancy: true
        audit:
          mode: automated
          eventNameOverride: getworkrequest
          resourceNameExpression: response.body.id
        serviceList:
##@ifdef UDX-1407
          - ApiGateway
#@endif # UDX-1407
#@ifdef stage
          - ApiGatewayStage
#@endif # stage
#@ifdef integration
          - ApiGatewayDev
#@endif # integration
        maximumAttemptCount: 3
      operationId: GetWorkRequest
      summary: Gets work request status
      description: Gets the status of the work request with the given identifier.
      parameters:
        - $ref: '#/parameters/WorkRequestIdPathParam'
        - $ref: '#/parameters/RequestIdHeader'
      responses:
        200:
          schema:
            $ref: '#/definitions/WorkRequest'
          description: The details of the work request.
          headers:
            etag: *ref-etag
            opc-request-id: *ref-opc-request-id
            retry-after: *ref-retry-after
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

    delete:
      tags: ['workRequests']
      x-obmcs-splat:
        apiType: Asynchronous
        routing:
          strategy: route-to-any-ad
        throttling:
          spectreLimitKey: apigw-workrequest-cancel
        resources:
          workrequest:
            serviceResourceName: WorkRequest
            actionKind: DELETE
            permissions: ["API_WORK_REQUEST_CANCEL"]
##@ifdef UDX-1407
            targetCompartmentId: downstream.getOr404('ApiGateway','GetWorkRequest', request.resourceId).compartmentId
#@endif # UDX-1407
#@ifdef stage
#            targetCompartmentId: downstream.getOr404('ApiGatewayStage','GetWorkRequest', request.resourceId).compartmentId
#@endif # stage
#@ifdef integration
#            targetCompartmentId: downstream.getOr404('ApiGatewayDev','GetWorkRequest', request.resourceId).compartmentId
#@endif # integration
        authorization:
          mode: automated
          check: resources['workrequest'].grantedPermissions.contains('API_WORK_REQUEST_CANCEL')
          allowCrossTenancy: true
        audit:
          mode: none
        serviceList:
##@ifdef UDX-1407
          - ApiGateway
#@endif # UDX-1407
#@ifdef stage
          - ApiGatewayStage
#@endif # stage
#@ifdef integration
          - ApiGatewayDev
#@endif # integration
        maximumAttemptCount: 3
      operationId: CancelWorkRequest
      summary: Cancel the work request
      description: Cancels the work request.
      x-related-resource: '#/definitions/WorkRequest'
      parameters:
        - $ref: '#/parameters/WorkRequestIdPathParam'
        - $ref: '#/parameters/RetryTokenHeader'
        - $ref: '#/parameters/IfMatchHeader'
        - $ref: '#/parameters/RequestIdHeader'
      responses:
        202:
          description: The work request will be cancelled.
          headers:
            opc-request-id: *ref-opc-request-id
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        412:
          $ref: '#/responses/412'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

  /workRequests:
    get:
      tags: ['workRequests']
      x-obmcs-splat:
        operationType: GET
        routing:
          strategy: route-to-any-ad
        throttling:
          spectreLimitKey: apigw-workrequest-list
        resources:
          workrequest:
            serviceResourceName: WorkRequest
            actionKind: LIST
            permissions: ["API_WORK_REQUEST_LIST"]
            targetCompartmentId: request.parameter.compartmentId
        authorization:
          mode: automated
          check: resources['workrequest'].grantedPermissions.contains('API_WORK_REQUEST_LIST')
          allowCrossTenancy: true
        audit:
          mode: automated
          eventNameOverride: listworkrequests
        serviceList:
##@ifdef UDX-1407
          - ApiGateway
#@endif # UDX-1407
#@ifdef stage
          - ApiGatewayStage
#@endif # stage
#@ifdef integration
          - ApiGatewayDev
#@endif # integration
        maximumAttemptCount: 3
      operationId: ListWorkRequests
      summary: List work requests
      description: |
        Lists the work requests in a compartment.
      parameters:
        - $ref: '#/parameters/CompartmentIdQueryParam'
        - $ref: '#/parameters/ResourceIdQueryParam'
        - $ref: '#/parameters/RequestIdHeader'
        - $ref: '#/parameters/PaginationTokenQueryParam'
        - $ref: '#/parameters/PaginationLimitQueryParam'
        - $ref: '#/parameters/SortOrderQueryParam'
        - $ref: '#/parameters/SortByQueryParam'
      x-related-resource: '#/definitions/WorkRequestSummary'
      responses:
        200:
          description: The list of work requests.
          schema:
            $ref: '#/definitions/WorkRequestCollection'
          headers:
            opc-request-id: *ref-opc-request-id
            opc-next-page: *ref-opc-next-page
            opc-prev-page: *ref-opc-prev-page
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

  /workRequests/{workRequestId}/errors:
    get:
      tags: ['workRequests']
      x-obmcs-splat:
        operationType: GET
        routing:
          strategy: route-to-any-ad
        throttling:
          spectreLimitKey: apigw-workrequest-list
        resources:
          workrequest:
            serviceResourceName: WorkRequest
            actionKind: LIST
            permissions: ["API_WORK_REQUEST_READ"]
##@ifdef UDX-1407
            targetCompartmentId: downstream.getOr404('ApiGateway','GetWorkRequest', request.resourceId).compartmentId
#@endif # UDX-1407
#@ifdef stage
#            targetCompartmentId: downstream.getOr404('ApiGatewayStage','GetWorkRequest', request.resourceId).compartmentId
#@endif # stage
#@ifdef integration
#            targetCompartmentId: downstream.getOr404('ApiGatewayDev','GetWorkRequest', request.resourceId).compartmentId
#@endif # integration
        authorization:
          mode: automated
          check: resources['workrequest'].grantedPermissions.contains('API_WORK_REQUEST_READ')
          allowCrossTenancy: true
        audit:
          mode: automated
          eventNameOverride: listworkrequesterrors
        serviceList:
##@ifdef UDX-1407
          - ApiGateway
#@endif # UDX-1407
#@ifdef stage
          - ApiGatewayStage
#@endif # stage
#@ifdef integration
          - ApiGatewayDev
#@endif # integration
        maximumAttemptCount: 3
      operationId: ListWorkRequestErrors
      summary: Lists work request errors
      x-related-resource: '#/definitions/WorkRequestError'
      description: |
        Returns a (paginated) list of errors for a given work request.
      parameters:
        - $ref: '#/parameters/WorkRequestIdPathParam'
        - $ref: '#/parameters/RequestIdHeader'
        - $ref: '#/parameters/PaginationTokenQueryParam'
        - $ref: '#/parameters/PaginationLimitQueryParam'
        - $ref: '#/parameters/SortOrderQueryParam'
        - $ref: '#/parameters/SortByQueryParam'
      responses:
        200:
          description: List of work request errors.
          schema:
            $ref: '#/definitions/WorkRequestErrorCollection'
          headers:
            opc-next-page: *ref-opc-next-page
            opc-prev-page: *ref-opc-prev-page
            opc-request-id: *ref-opc-request-id
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

  /workRequests/{workRequestId}/logs:
    get:
      tags: ['workRequests']
      x-obmcs-splat:
        operationType: GET
        routing:
          strategy: route-to-any-ad
        throttling:
          spectreLimitKey: apigw-workrequest-list
        resources:
          workrequest:
            serviceResourceName: WorkRequest
            actionKind: LIST
            permissions: ["API_WORK_REQUEST_READ"]
##@ifdef UDX-1407
            targetCompartmentId: downstream.getOr404('ApiGateway','GetWorkRequest', request.resourceId).compartmentId
#@endif # UDX-1407
#@ifdef stage
#            targetCompartmentId: downstream.getOr404('ApiGatewayStage','GetWorkRequest', request.resourceId).compartmentId
#@endif # stage
#@ifdef integration
#            targetCompartmentId: downstream.getOr404('ApiGatewayDev','GetWorkRequest', request.resourceId).compartmentId
#@endif # integration
        authorization:
          mode: automated
          check: resources['workrequest'].grantedPermissions.contains('API_WORK_REQUEST_READ')
          allowCrossTenancy: true
        audit:
          mode: automated
          eventNameOverride: listworkrequestlogs
        serviceList:
##@ifdef UDX-1407
          - ApiGateway
#@endif # UDX-1407
#@ifdef stage
          - ApiGatewayStage
#@endif # stage
#@ifdef integration
          - ApiGatewayDev
#@endif # integration
        maximumAttemptCount: 3
      operationId: ListWorkRequestLogs
      summary: Lists work request logs
      x-related-resource: '#/definitions/WorkRequestLog'
      description: |
        Returns a (paginated) list of logs for a given work request.
      parameters:
        - $ref: '#/parameters/WorkRequestIdPathParam'
        - $ref: '#/parameters/RequestIdHeader'
        - $ref: '#/parameters/PaginationTokenQueryParam'
        - $ref: '#/parameters/PaginationLimitQueryParam'
        - $ref: '#/parameters/SortOrderQueryParam'
        - $ref: '#/parameters/SortByQueryParam'
      responses:
        200:
          description: List of work request logs.
          schema:
            $ref: '#/definitions/WorkRequestLogCollection'
          headers:
            opc-next-page: *ref-opc-next-page
            opc-prev-page: *ref-opc-prev-page
            opc-request-id: *ref-opc-request-id
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

  /apis:
    get:
      tags: ['api']
      x-obmcs-splat:
        operationType: GET
        routing:
          strategy: route-to-any-ad
        throttling:
          spectreLimitKey: apigw-apis-list
        resources:
          api:
            serviceResourceName: Api
            actionKind: LIST
            permissions: ["API_LIST"]
            targetCompartmentId: request.parameter.compartmentId
        authorization:
          mode: automated
          check: resources['api'].grantedPermissions.contains('API_LIST')
          allowCrossTenancy: true
        audit:
          mode: automated
          eventNameOverride: listapis
        serviceList:
##@ifdef UDX-1407
          - ApiGateway
#@endif # UDX-1407
#@ifdef stage
          - ApiGatewayStage
#@endif # stage
#@ifdef integration
          - ApiGatewayDev
#@endif # integration
        maximumAttemptCount: 3
      operationId: ListApis
      x-related-resource: '#/definitions/ApiSummary'
      summary: Gets a list of all APIs in a compartment
      description: |
        Returns a list of APIs.
      parameters:
        - $ref: '#/parameters/CompartmentIdQueryParam'
        - $ref: '#/parameters/DisplayNameQueryParam'
        - $ref: '#/parameters/ApiLifecycleStateQueryParam'
        - $ref: '#/parameters/ApiSpecStatusQueryParam'
        - $ref: '#/parameters/PaginationLimitQueryParam'
        - $ref: '#/parameters/PaginationTokenQueryParam'
        - $ref: '#/parameters/SortOrderQueryParam'
        - $ref: '#/parameters/SortByQueryParam'
        - $ref: '#/parameters/RequestIdHeader'
      responses:
        200:
          description: A page of API Summary objects.
          schema:
            $ref: '#/definitions/ApiCollection'
          headers:
            opc-request-id: *ref-opc-request-id
            opc-next-page: *ref-opc-next-page
            opc-prev-page: *ref-opc-prev-page
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

    post:
      tags: ['api']
      x-obmcs-splat:
        apiType: Asynchronous
        routing:
          strategy: route-to-any-ad
        throttling:
          spectreLimitKey: apigw-api-create
        resources:
          gateway:
            serviceResourceName: Api
            actionKind: CREATE
            permissions: ["API_CREATE"]
            targetCompartmentId: request.body.compartmentId
            freeformTags: request.body.freeformTags
            definedTags: request.body.definedTags
            forwardTagSlug: true
            reconciliationCanStartAfterSecs: 60
        authorization:
          mode: automated
          check: resources['api'].grantedPermissions.contains('API_CREATE')
          allowCrossTenancy: true
        audit:
          mode: none
        quotas:
          mode: automated
          quotaDefinitions:
            api-count-quota:
              operationResourceName: api
              quotaName: "'api-count'"
              familyName: api-gateway
              usage: 1
              quotaHandlingMode: Enforce
        serviceList:
##@ifdef UDX-1407
          - ApiGateway
#@endif # UDX-1407
#@ifdef stage
          - ApiGatewayStage
#@endif # stage
#@ifdef integration
          - ApiGatewayDev
#@endif # integration
        maximumAttemptCount: 3
      operationId: CreateApi
      summary: Creates a new API
      description: |
        Creates a new API.
      parameters:
        - name: CreateApiDetails
          description: Details for the new API.
          required: true
          in: body
          schema:
            $ref: '#/definitions/CreateApiDetails'
        - $ref: '#/parameters/RetryTokenHeader'
        - $ref: '#/parameters/RequestIdHeader'
      responses:
        201:
          description: The API is being created.
          schema:
            $ref: '#/definitions/Api'
          headers:
            etag: *ref-etag
            opc-work-request-id: *ref-opc-work-request-id
            opc-request-id: *ref-opc-request-id
            location: *ref-location
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        409:
          $ref: '#/responses/409'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

  /apis/{apiId}:
    get:
      tags: ['api']
      x-obmcs-splat:
        routing:
          strategy: route-to-any-ad
        throttling:
          spectreLimitKey: apigw-api-read
        resources:
          gateway:
            serviceResourceName: Api
            actionKind: READ
            permissions: ["API_READ"]
##@ifdef UDX-1407
            targetCompartmentId: downstream.getOr404('ApiGateway','GetApi', request.resourceId).compartmentId
            existingTags: downstream.getOr404('ApiGateway', 'GetApi', request.resourceId).freeformTags.'.splatAuthorizedTagSlug'
#@endif # UDX-1407
#@ifdef stage
#            targetCompartmentId: downstream.getOr404('ApiGatewayStage','GetGateway', request.resourceId).compartmentId
#            existingTags: downstream.getOr404('ApiGatewayStage', 'GetGateway', request.resourceId).freeformTags.'.splatAuthorizedTagSlug'
#@endif # stage
#@ifdef integration
#            targetCompartmentId: downstream.getOr404('ApiGatewayDev','GetGateway', request.resourceId).compartmentId
#            existingTags: downstream.getOr404('ApiGatewayDev', 'GetGateway', request.resourceId).freeformTags.'.splatAuthorizedTagSlug'
#@endif # integration
        authorization:
          mode: automated
          check: resources['api'].grantedPermissions.contains('API_READ')
          allowCrossTenancy: true
        audit:
          mode: automated
          eventNameOverride: getapi
        serviceList:
##@ifdef UDX-1407
          - ApiGateway
#@endif # UDX-1407
#@ifdef stage
          - ApiGatewayStage
#@endif # stage
#@ifdef integration
          - ApiGatewayDev
#@endif # integration
        maximumAttemptCount: 3
      operationId: GetApi
      summary: Get API
      description: Gets an API by identifier.
      parameters:
        - $ref: '#/parameters/ApiIdentifierPathParam'
        - $ref: '#/parameters/RequestIdHeader'
      responses:
        200:
          description: Retrieves the API with the given identifier.
          schema:
            $ref: '#/definitions/Api'
          headers:
            etag: *ref-etag
            opc-request-id: *ref-opc-request-id
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

    put:
      tags: ['api']
      x-obmcs-splat:
        apiType: Asynchronous
        routing:
          strategy: route-to-any-ad
        throttling:
          spectreLimitKey: apigw-api-update
        resources:
          gateway:
            serviceResourceName: Api
            actionKind: UPDATE
            permissions: ["API_UPDATE"]
            definedTags: request.body.definedTags
            freeformTags: request.body.freeformTags
            forwardTagSlug: true
##@ifdef UDX-1407
            targetCompartmentId: downstream.getOr404('ApiGateway','GetApi', request.resourceId).compartmentId
            existingTags: downstream.getOr404('ApiGateway', 'GetApi', request.resourceId).freeformTags.'.splatAuthorizedTagSlug'
            existingResourceExpression: downstream.getOr404('ApiGateway', 'GetApi', request.resourceId)
#@endif # UDX-1407
#@ifdef stage
#            targetCompartmentId: downstream.getOr404('ApiGatewayStage','GetApi', request.resourceId).compartmentId
#            existingTags: downstream.getOr404('ApiGatewayStage', 'GetApi', request.resourceId).freeformTags.'.splatAuthorizedTagSlug'
#            existingResourceExpression: downstream.getOr404('ApiGatewayStage', 'GetApi', request.resourceId)
#@endif # stage
#@ifdef integration
#            targetCompartmentId: downstream.getOr404('ApiGatewayDev','GetApi', request.resourceId).compartmentId
#            existingTags: downstream.getOr404('ApiGatewayDev', 'GetApi', request.resourceId).freeformTags.'.splatAuthorizedTagSlug'
#            existingResourceExpression: downstream.getOr404('ApiGatewayDev', 'GetApi', request.resourceId)
#@endif # integration
        authorization:
          mode: automated
          check: resources['api'].grantedPermissions.contains('API_UPDATE')
          allowCrossTenancy: true
        audit:
          mode: none
        serviceList:
##@ifdef UDX-1407
          - ApiGateway
#@endif # UDX-1407
#@ifdef stage
          - ApiGatewayStage
#@endif # stage
#@ifdef integration
          - ApiGatewayDev
#@endif # integration
        maximumAttemptCount: 3
      operationId: UpdateApi
      x-related-resource: '#/definitions/Api'
      summary: Update the API by the identifier
      description: Updates the API with the given identifier.
      parameters:
        - $ref: '#/parameters/ApiIdentifierPathParam'
        - name: UpdateApiDetails
          description: The information to be updated.
          required: true
          in: body
          schema:
            $ref: '#/definitions/UpdateApiDetails'
        - $ref: '#/parameters/IfMatchHeader'
        - $ref: '#/parameters/RequestIdHeader'
      responses:
        202:
          description: The API will be updated.
          headers:
            opc-work-request-id: *ref-opc-work-request-id
            opc-request-id: *ref-opc-request-id
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

    delete:
      tags: ['api']
      x-obmcs-splat:
        apiType: Asynchronous
        routing:
          strategy: route-to-any-ad
        throttling:
          spectreLimitKey: apigw-api-delete
        resources:
          gateway:
            serviceResourceName: Api
            actionKind: DELETE
            permissions: ["API_DELETE"]
            resourceOcid: request.resourceId
            reconciliationCanStartAfterSecs: 60
##@ifdef UDX-1407
            targetCompartmentId: downstream.getOr404('ApiGateway','GetApi', request.resourceId).compartmentId
            existingTags: downstream.getOr404('ApiGateway', 'GetApi', request.resourceId).freeformTags.'.splatAuthorizedTagSlug'
            existingResourceExpression: downstream.getOr404('ApiGateway', 'GetApi', request.resourceId)
#@endif # UDX-1407
#@ifdef stage
#            targetCompartmentId: downstream.getOr404('ApiGatewayStage','GetApi', request.resourceId).compartmentId
#            existingTags: downstream.getOr404('ApiGatewayStage', 'GetApi', request.resourceId).freeformTags.'.splatAuthorizedTagSlug'
#            existingResourceExpression: downstream.getOr404('ApiGatewayStage', 'GetApi', request.resourceId)
#@endif # stage
#@ifdef integration
#            targetCompartmentId: downstream.getOr404('ApiGatewayDev','GetApi', request.resourceId).compartmentId
#            existingTags: downstream.getOr404('ApiGatewayDev', 'GetApi', request.resourceId).freeformTags.'.splatAuthorizedTagSlug'
#            existingResourceExpression: downstream.getOr404('ApiGatewayDev', 'GetApi', request.resourceId)
#@endif # integration
        authorization:
          mode: automated
          check: resources['api'].grantedPermissions.contains('API_DELETE')
          allowCrossTenancy: true
        audit:
          mode: none
        quotas:
          mode: automated
        serviceList:
##@ifdef UDX-1407
          - ApiGateway
#@endif # UDX-1407
#@ifdef stage
          - ApiGatewayStage
#@endif # stage
#@ifdef integration
          - ApiGatewayDev
#@endif # integration
        maximumAttemptCount: 3
      operationId: DeleteApi
      x-related-resource: '#/definitions/Api'
      summary: Delete an API.
      description: Deletes the API with the given identifier.
      parameters:
        - $ref: '#/parameters/ApiIdentifierPathParam'
        - $ref: '#/parameters/IfMatchHeader'
        - $ref: '#/parameters/RequestIdHeader'
      responses:
        202:
          description: The API will be deleted.
          headers:
            opc-work-request-id: *ref-opc-work-request-id
            opc-request-id: *ref-opc-request-id
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'

          
  /apis/{apiId}/content:
    get:
      tags: ['api']
      x-obmcs-splat:
        routing:
          strategy: route-to-any-ad
        throttling:
          spectreLimitKey: apigw-api-read
        resources:
          Api:
            serviceResourceName: Api
            actionKind: READ
            permissions: ["API_READ"]
##@ifdef UDX-1407
            targetCompartmentId: downstream.getOr404('ApiGateway','GetApi', request.resourceId).compartmentId
            existingTags: downstream.getOr404('ApiGateway', 'GetApi', request.resourceId).freeformTags.'.splatAuthorizedTagSlug'
#@endif # UDX-1407
#@ifdef stage
#            targetCompartmentId: downstream.getOr404('ApiGatewayStage','GetGateway', request.resourceId).compartmentId
#            existingTags: downstream.getOr404('ApiGatewayStage', 'GetGateway', request.resourceId).freeformTags.'.splatAuthorizedTagSlug'
#@endif # stage
#@ifdef integration
#            targetCompartmentId: downstream.getOr404('ApiGatewayDev','GetGateway', request.resourceId).compartmentId
#            existingTags: downstream.getOr404('ApiGatewayDev', 'GetGateway', request.resourceId).freeformTags.'.splatAuthorizedTagSlug'
#@endif # integration
        authorization:
          mode: automated
          check: resources['api'].grantedPermissions.contains('API_READ')
          allowCrossTenancy: true
        audit:
          mode: automated
          eventNameOverride: getapi
        serviceList:
##@ifdef UDX-1407
          - ApiGateway
#@endif # UDX-1407
#@ifdef stage
          - ApiGatewayStage
#@endif # stage
#@ifdef integration
          - ApiGatewayDev
#@endif # integration
        maximumAttemptCount: 3
      operationId: GetApiContent
      summary: Get API content
      description: Gets an API content by identifier.
      parameters:
        - $ref: '#/parameters/ApiIdentifierPathParam'
        - $ref: '#/parameters/RequestIdHeader'
      responses:
        200:
          description: Retrieves the API content with the given identifier.
          schema:
            type: string
            format: binary
          headers:
            etag: *ref-etag
            opc-request-id: *ref-opc-request-id
            
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'


  /apis/{apiId}/actions/changeCompartment:
    post:
      tags: ['api']
      x-obmcs-splat:
        routing:
          strategy: route-to-any-ad
        throttling:
          spectreLimitKey: apigw-api-update
        resources:
          api-source-compartment:
            serviceResourceName: Api
            actionKind: READ
            resourceOcid: request.resourceId
            reconciliationCanStartAfterSecs: 60
            permissions: ["API_MOVE"]
##@ifdef UDX-1407
            targetCompartmentId: downstream.getOr404('ApiGateway','GetApi', request.resourceId).compartmentId
            existingTags: downstream.getOr404('ApiGateway', 'GetApi', request.resourceId).freeformTags.'.splatAuthorizedTagSlug'
            existingResourceExpression: downstream.getOr404('ApiGateway', 'GetApi', request.resourceId)
#@endif # UDX-1407
#@ifdef stage
#            targetCompartmentId: downstream.getOr404('ApiGatewayStage','GetApi', request.resourceId).compartmentId
#            existingTags: downstream.getOr404('ApiGatewayStage', 'GetApi', request.resourceId).freeformTags.'.splatAuthorizedTagSlug'
#            existingResourceExpression: downstream.getOr404('ApiGatewayStage', 'GetApi', request.resourceId)
#@endif # stage
#@ifdef integration
#            targetCompartmentId: downstream.getOr404('ApiGatewayDev','GetApi', request.resourceId).compartmentId
#            existingTags: downstream.getOr404('ApiGatewayDev', 'GetApi', request.resourceId).freeformTags.'.splatAuthorizedTagSlug'
#            existingResourceExpression: downstream.getOr404('ApiGatewayDev', 'GetApi', request.resourceId)
#@endif # integration
          api-new-compartment:
            serviceResourceName: Api
            actionKind: MOVE
            resourceOcid: request.resourceId
            reconciliationCanStartAfterSecs: 60
            targetCompartmentId: request.body.compartmentId
            permissions: ["API_MOVE"]
##@ifdef UDX-1407
            existingTags: downstream.getOr404('ApiGateway', 'GetApi', request.resourceId).freeformTags.'.splatAuthorizedTagSlug'
            existingResourceExpression: downstream.getOr404('ApiGateway', 'GetApi', request.resourceId)
#@endif # UDX-1407
#@ifdef stage
#            existingTags: downstream.getOr404('ApiGatewayStage', 'GetApi', request.resourceId).freeformTags.'.splatAuthorizedTagSlug'
#            existingResourceExpression: downstream.getOr404('ApiGatewayStage', 'GetApi', request.resourceId)
#@endif # stage
#@ifdef integration
#            existingTags: downstream.getOr404('ApiGatewayDev', 'GetApi', request.resourceId).freeformTags.'.splatAuthorizedTagSlug'
#            existingResourceExpression: downstream.getOr404('ApiGatewayDev', 'GetApi', request.resourceId)
#@endif # integration
        authorization:
            mode: automated
            check: >-
              resources['api-source-compartment'].grantedPermissions.contains('API_MOVE') &&
              resources['api-new-compartment'].grantedPermissions.contains('API_MOVE')
            allowCrossTenancy: true
            sameTenancyResources: ["api-source-compartment", "api-new-compartment"]
            crossTenancyAssociations: []
        audit:
          mode: none
        quotas:
          mode: automated
        serviceList:
##@ifdef UDX-1407
          - ApiGateway
#@endif # UDX-1407
#@ifdef stage
          - ApiGatewayStage
#@endif # stage
#@ifdef integration
          - ApiGatewayDev
#@endif # integration
        maximumAttemptCount: 3
      operationId: ChangeApiCompartment
      summary: Change the API compartment.
      description: Changes the API compartment.
      x-related-resource: '#/definitions/Api'
      parameters:
        - $ref: '#/parameters/ApiIdentifierPathParam'
        - name: ChangeApiCompartmentDetails
          description: Details of the target compartment.
          required: true
          in: body
          schema:
            $ref: '#/definitions/ChangeApiCompartmentDetails'
        - $ref: '#/parameters/RetryTokenHeader'
        - $ref: '#/parameters/IfMatchHeader'
        - $ref: '#/parameters/RequestIdHeader'
      responses:
        202:
          description: The API compartment will be changed.
          headers:
            opc-work-request-id: *ref-opc-work-request-id
            opc-request-id: *ref-opc-request-id
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        412:
          $ref: '#/responses/412'
        429:
          $ref: '#/responses/429'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/default'


#==========[ Definitions ]==============================================================================================
definitions:

  Gateway:
    description: |
      A gateway is a virtual network appliance in a regional subnet. A gateway routes inbound traffic to back-end services including public, private, and partner HTTP APIs, as well as Oracle Functions. Avoid entering confidential information. For more information, see
      [API Gateway Concepts](/iaas/Content/APIGateway/Concepts/apigatewayconcepts.htm).
    type: object
    required:
      - id
      - compartmentId
      - endpointType
    x-obmcs-splat:
      resourceKind: api-gateways
      adLocality: regional
      activeLifecycleStates: ['ACTIVE', 'FAILED']
      deletedLifecycleStates: ['DELETED']
      getOperationId: GetGateway
      listResourcesOperationId: ListGateways
##@ifdef UDX-1407
      ocidEntityType: apigateway
#@endif # UDX-1407
#@ifdef stage
#      ocidEntityType: apigatewaystage
#@endif # stage
#@ifdef integration
#      ocidEntityType: apigatewaydev
#@endif # integration
    properties:
      id: *ref-ocid
      displayName: *ref-displayName
      compartmentId: *ref-compartmentOcid
      endpointType:
        description: Gateway endpoint type.
        enum:
        - PUBLIC
        - PRIVATE
        type: string
      subnetId: *ref-subnetOcid
      timeCreated: *ref-timeCreated
      timeUpdated: *ref-timeUpdated
      lifecycleState:
        description: The current state of the gateway.
        enum:
          - CREATING
          - ACTIVE
          - UPDATING
          - DELETING
          - DELETED
          - FAILED
        type: string
      lifecycleDetails:
        description: |
          A message describing the current state in more detail.
          For example, can be used to provide actionable information for a
          resource in a Failed state.
        type: string
      hostname:
        description: The hostname for APIs deployed on the gateway.
        type: string
      freeformTags: *ref-freeformTags
      definedTags: *ref-definedTags

  GatewayCollection:
    description: Collection of gateway summaries.
    type: object
    required:
      - items
    properties:
      items:
        description: Gateway summaries.
        type: array
        items:
          $ref: '#/definitions/GatewaySummary'

  GatewaySummary:
    description: A summary of the gateway.
    type: object
    required:
      - id
      - compartmentId
      - endpointType
    properties:
      id: *ref-ocid
      displayName: *ref-displayName
      compartmentId: *ref-compartmentOcid
      endpointType:
        description: Gateway endpoint type.
        type: string
        x-obmcs-enumref: '#/definitions/Gateway/endpointType'
      subnetId: *ref-subnetOcid
      timeCreated: *ref-timeCreated
      timeUpdated: *ref-timeUpdated
      lifecycleState:
        description: The current state of the gateway.
        type: string
        x-obmcs-enumref: '#/definitions/Gateway/lifecycleState'
      lifecycleDetails:
        description: |
          A message describing the current state in more detail.
          For example, can be used to provide actionable information for a
          resource in a Failed state.
        type: string
      hostname:
        description: The hostname for the APIs deployed on the gateway.
        type: string
      freeformTags: *ref-freeformTags
      definedTags: *ref-definedTags

  CreateGatewayDetails:
    description: Information about the new gateway.
    type: object
    required:
      - endpointType
      - compartmentId
      - subnetId
    properties:
      displayName: *ref-displayName
      compartmentId: *ref-compartmentOcid
      endpointType:
        description: Gateway endpoint type.
        type: string
        x-obmcs-enumref: '#/definitions/Gateway/endpointType'
      subnetId: *ref-subnetOcid
      freeformTags: *ref-freeformTags
      definedTags: *ref-definedTags

  UpdateGatewayDetails:
    description: The information to be updated.
    type: object
    properties:
      displayName: *ref-displayName
      freeformTags: *ref-freeformTags
      definedTags: *ref-definedTags

  ChangeGatewayCompartmentDetails:
    description: The new compartment details for the gateway.
    type: object
    required:
      - compartmentId
    properties:
      compartmentId: *ref-compartmentOcid

  ChangeDeploymentCompartmentDetails:
    description: The new compartment details for the deployment.
    type: object
    required:
      - compartmentId
    properties:
      compartmentId: *ref-compartmentOcid

  Deployment:
    description: |
      A deployment deploys an API on a gateway. Avoid entering confidential information.
      For more information, see
      [API Gateway Concepts](/iaas/Content/APIGateway/Concepts/apigatewayconcepts.htm).
    type: object
    required:
      - id
      - gatewayId
      - compartmentId
      - pathPrefix
      - specification
      - endpoint
    x-obmcs-splat:
      resourceKind: api-deployments
      adLocality: regional
    properties:
      id: *ref-ocid
      gatewayId: *ref-ocid
      displayName: *ref-displayName
      compartmentId: *ref-compartmentOcid
      pathPrefix:
        description: |
          A path on which to deploy all routes contained in the API
          deployment specification. For more information, see
          [Deploying an API on an API Gateway by Creating an API 
          Deployment](/iaas/Content/APIGateway/Tasks/apigatewaycreatingdeployment.htm).
        type: string
      endpoint:
        description: The endpoint to access this deployment on the gateway.
        type: string
      specification:
        $ref: "#/definitions/ApiSpecification"
      timeCreated: *ref-timeCreated
      timeUpdated: *ref-timeUpdated
      lifecycleState:
        description: The current state of the deployment.
        type: string
        enum:
          - CREATING
          - ACTIVE
          - UPDATING
          - DELETING
          - DELETED
          - FAILED
      lifecycleDetails:
        description: |
          A message describing the current state in more detail.
          For example, can be used to provide actionable information for a
          resource in a Failed state.
        type: string
      freeformTags: *ref-freeformTags
      definedTags: *ref-definedTags

  DeploymentCollection:
    description: Collection of deployment summaries.
    type: object
    required:
      - items
    properties:
      items:
        description: Deployment summaries.
        type: array
        items:
          $ref: '#/definitions/DeploymentSummary'

  DeploymentSummary:
    description: A summary of the deployment.
    type: object
    required:
      - id
      - gatewayId
      - compartmentId
      - pathPrefix
      - endpoint
    properties:
      id: *ref-ocid
      gatewayId: *ref-ocid
      displayName: *ref-displayName
      compartmentId: *ref-compartmentOcid
      pathPrefix:
        description: |
          The path on which all routes contained in the API
          deployment specification are deployed. For more information, see
          [Deploying an API on an API Gateway by Creating an API 
          Deployment](/iaas/Content/APIGateway/Tasks/apigatewaycreatingdeployment.htm).
        type: string
      endpoint:
        description: The endpoint to access this deployment on the gateway.
        type: string
      timeCreated: *ref-timeCreated
      timeUpdated: *ref-timeUpdated
      lifecycleState:
        description: The current state of the deployment.
        type: string
        x-obmcs-enumref: "#/definitions/Deployment/lifecycleState"
      lifecycleDetails:
        description: |
          A message describing the current state in more detail.
          For example, can be used to provide actionable information for a
          resource in a Failed state.
        type: string
      freeformTags: *ref-freeformTags
      definedTags: *ref-definedTags

  CreateDeploymentDetails:
    description: Information about a new deployment.
    type: object
    required:
      - gatewayId
      - compartmentId
      - pathPrefix
      - specification
    properties:
      displayName: *ref-displayName
      gatewayId: *ref-ocid
      compartmentId: *ref-compartmentOcid
      pathPrefix:
        description: |
          A path on which to deploy all routes contained in the API
          deployment specification. For more information, see
          [Deploying an API on an API Gateway by Creating an API 
          Deployment](/iaas/Content/APIGateway/Tasks/apigatewaycreatingdeployment.htm).
        type: string
      specification:
        $ref: "#/definitions/ApiSpecification"
      freeformTags: *ref-freeformTags
      definedTags: *ref-definedTags

  UpdateDeploymentDetails:
    description: The information to be updated.
    type: object
    properties:
      displayName: *ref-displayName
      specification:
        $ref: "#/definitions/ApiSpecification"
      freeformTags: *ref-freeformTags
      definedTags: *ref-definedTags

  Error:
    description: Error Information.
    required:
      - code
      - message
    properties:
      code:
        description: A short error code that defines the error, meant for programmatic parsing.
        type: string
      message:
        description: A human-readable error string.
        type: string

  WorkRequest:
    description: A description of the work request status.
    required:
      - id
      - operationType
      - status
      - compartmentId
      - resources
      - percentComplete
      - timeAccepted
    x-obmcs-splat:
      resourceKind: api-workrequests
      adLocality: regional
    properties:
      id: *ref-ocid
      operationType:
        type: string
        enum:
          - CREATE_GATEWAY
          - UPDATE_GATEWAY
          - DELETE_GATEWAY
          - CREATE_DEPLOYMENT
          - UPDATE_DEPLOYMENT
          - DELETE_DEPLOYMENT
        description: The type of the work request.
      status:
        type: string
        enum:
          - ACCEPTED
          - IN_PROGRESS
          - FAILED
          - SUCCEEDED
          - CANCELING
          - CANCELED
        description: The status of the work request.
      compartmentId: *ref-compartmentOcid
      resources:
        type: array
        items:
          $ref: '#/definitions/WorkRequestResource'
        description: The resources affected by this work request.
      percentComplete:
        type: number
        format: float
        description: Percentage of the request completed.
      timeAccepted:
        type: string
        format: date-time
        description: |
          The date and time the request was created, as described in
          [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
      timeStarted:
        type: string
        format: date-time
        description: |
          The date and time the request was started, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339),
          section 14.29.
      timeFinished:
        type: string
        format: date-time
        description: |
          The date and time the request was finished, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339).

  WorkRequestCollection:
    description: Collection of work request summaries.
    type: object
    required:
    - items
    properties:
      items:
        description: Work request summaries.
        type: array
        items:
          $ref: '#/definitions/WorkRequestSummary'

  WorkRequestSummary:
    description: A summary of the work request.
    required:
      - operationType
      - status
      - workRequestId
      - compartmentId
      - percentComplete
      - timeAccepted
    properties:
      operationType:
        type: string
        description: The type of the work request.
        x-obmcs-enumref: '#/definitions/WorkRequest/operationType'
      status:
        type: string
        description: The status of the work request.
        x-obmcs-enumref: '#/definitions/WorkRequest/status'
      workRequestId: *ref-ocid
      compartmentId: *ref-compartmentOcid
      percentComplete:
        type: number
        format: float
        description: Percentage of the request completed.
      timeAccepted:
        type: string
        format: date-time
        description: |
          The date and time the request was created, as described in
          [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
      timeStarted:
        type: string
        format: date-time
        description: |
          The date and time the request was started, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339),
          section 14.29.
      timeFinished:
        type: string
        format: date-time
        description: |
          The date and time the request was finished, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339).

  WorkRequestResource:
    description: A resource created or operated on by a work request.
    required:
      - actionType
      - entityType
      - identifier
    properties:
      entityType:
        type: string
        description: The resource type the work request affects.
      actionType:
        description: |
          The way in which this resource is affected by the work tracked in the work request.
          A resource being created, updated, or deleted will remain in the IN_PROGRESS state until
          work is complete for that resource; at which point, it will transition to CREATED, UPDATED,
          or DELETED, respectively.
        enum:
          - CREATED
          - UPDATED
          - DELETED
          - IN_PROGRESS
          - FAILED
        type: string
      identifier:
        type: string
        description: The identifier of the resource the work request affects.
      entityUri:
        type: string
        description: |
          The URI path on which the user can perform a GET operation to access the resource metadata.

  WorkRequestErrorCollection:
    description: Collection of work request errors.
    type: object
    required:
    - items
    properties:
      items:
        description: Work request errors.
        type: array
        items:
          $ref: '#/definitions/WorkRequestError'

  WorkRequestError:
    description: An error encountered while executing a work request.
    required:
      - code
      - message
      - timestamp
    properties:
      code:
        type: string
        description: |
          A machine-usable code for the error that occured. See
          <a href="/Content/API/References/apierrors.htm">API Errors</a>.
      message:
        type: string
        description: A human-readable description of the issue encountered.
      timestamp:
        type: string
        format: date-time
        description: The time the error occured. An RFC3339 formatted datetime string.

  WorkRequestLogCollection:
    description: Collection of work request logs.
    type: object
    required:
    - items
    properties:
      items:
        description: Work request logs.
        type: array
        items:
          $ref: '#/definitions/WorkRequestLog'

  WorkRequestLog:
    description: A log message from the execution of a work request.
    required:
      - message
      - timestamp
    properties:
      message:
        type: string
        description: Human-readable log message.
      timestamp:
        type: string
        format: date-time
        description: The time the log message was written. An RFC3339 formatted datetime string.

#==========[ Policies ]=================================================================================================

  AuthenticationPolicy:
    description: Information on how to authenticate incoming requests.
    type: object
    discriminator: type
    properties:
      isAnonymousAccessAllowed:
        description: |
          Whether an unauthenticated user may access the API. Must be "true" to enable ANONYMOUS
          route authorization.
        type: boolean
        default: false
        example: true
      type:
        description: Type of the authentication policy to use.
        type: string
        enum:
          - CUSTOM_AUTHENTICATION
    required:
      - type

  CustomAuthenticationPolicy:
    description: |
      Use a function to validate a custom header or query parameter sent with the request authentication.
      A valid policy must specify either tokenHeader or tokenQueryParam.
    allOf:
      - $ref: '#/definitions/AuthenticationPolicy'
      - type: "object"
        discriminator: CUSTOM_AUTHENTICATION
        required:
          - functionId
        properties:
          functionId: *ref-functionOcid
          tokenHeader:
            description: The name of the header containing the authentication token.
            type: string
            example: Authorization
          tokenQueryParam:
            description: The name of the query parameter containing the authentication token.
            type: string
            example: key

  RateLimitingPolicy:
    description: Limit the number of requests that should be handled for the specified window using a specfic key.
    type: object
    required:
      - rateInRequestsPerSecond
      - rateKey
    properties:
      rateInRequestsPerSecond:
        description: The maximum number of requests per second to allow.
        type: integer

      rateKey:
        description: The key used to group requests together.
        type: string
        enum:
          - CLIENT_IP
          - TOTAL

  RouteAuthorizationPolicy:
    description: |
      If authentication has been performed, validate whether the request scope (if any) applies to this route.
      If no RouteAuthorizationPolicy is defined for a route, a policy with a type of AUTHENTICATION_ONLY is applied.
    type: object
    discriminator: type
    properties:
      type:
        description: |
          Indicates how authorization should be applied. For a type of ANY_OF, an "allowedScope"
          property must also be specfied. Otherwise, only a type is required. For a type of ANONYMOUS, an
          authenticated API must have the "isAnonymousAccessAllowed" property set to "true" in the authentication
          policy.
        type: string
        enum:
        - ANONYMOUS
        - ANY_OF
        - AUTHENTICATION_ONLY
        default: AUTHENTICATION_ONLY

  AnonymousRouteAuthorizationPolicy:
    description: |
      For a type of ANONYMOUS, an authenticated API must have the "isAnonymousAccessAllowed" property set to "true"
      in the authentication policy.
    allOf:
    - $ref: '#/definitions/RouteAuthorizationPolicy'
    - type: object
      discriminator: ANONYMOUS

  AnyOfRouteAuthorizationPolicy:
    description: |
      If authentication has been performed, validate whether the request scope (if any) applies to this route.
    allOf:
    - $ref: '#/definitions/RouteAuthorizationPolicy'
    - type: object
      discriminator: ANY_OF
      required:
      - allowedScope
      properties:
        allowedScope:
          description: |
            A user whose scope includes any of these access ranges is allowed on
            this route. Access ranges are case-sensitive.
          type: array
          items:
            type: string
          example: ["Admin", "TodoUser"]

  AuthenticationOnlyRouteAuthorizationPolicy:
    description: |
      Only authentication is performed for the request and authorization is skipped.
    allOf:
    - $ref: '#/definitions/RouteAuthorizationPolicy'
    - type: object
      discriminator: AUTHENTICATION_ONLY

#@ifdef validateHeaders
  ValidateHeadersPolicyItem:
    description: |
      Validate whether the value or presence of an http header is as expected.
    type: object
    required:
      - header
      - constraint
    properties:
      header:
        description: The case-insensitive name of the header to validate.
        type: string
        example: X-Custom-Header
      constraint:
        description: The constraint type to apply on the header.
        type: string
        enum:
          - EXISTS
          - NOT_EXISTS
          - IN
          - NOT_IN
        default: EXISTS
      values:
        description: The values used by the constraint type.
        type: array
        items:
          type: string
          example: foo

  ValidateHeadersPolicy:
    description: |
      Performs a list of header validations on the request or response.
    type: object
    properties:
      validations:
        description: Validate headers on the request or response.
        type: array
        items:
          $ref: "#/definitions/ValidateHeadersPolicyItem"
#@endif # validateHeaders

#@ifdef validateQueryParams
  ValidateQueryParamsPolicy:
    description: |
      Performs a list of query parameter validations on the request or response.
    type: object
    properties:
      validations:
        description: Validate query parameters on the request or response.
        type: array
        items:
          $ref: "#/definitions/ValidateQueryParamsPolicyItem"

  ValidateQueryParamsPolicyItem:
    description: |
      Validate whether the value or presence of a query parameter is as expected.
    type: object
    required:
      - key
      - constraint
    properties:
      key:
        description: The case-sensitive name of the query parameter.
        type: string
        example: myFancyParam
      constraint:
        description: The constraint type to apply on the query parameter.
        type: string
        enum:
          - EXISTS
          - NOT_EXISTS
          - IN
          - NOT_IN
        default: EXISTS
      values:
        description: The values used by the constraint type.
        type: array
        items:
          type: string
          example: foo
#@endif # validateQueryParams

#@ifdef transformHeaders
  TransformHeadersPolicy:
    description: |
      Performs a list of header operations on the request or response.
    type: object
    properties:
      items:
        description: Operation to be performed on the request or response headers.
        type: array
        items:
          $ref: "#/definitions/TransformHeadersPolicyItem"

  TransformHeadersPolicyItem:
    description: |
      Sets or deletes an http header.
    type: object
    required:
      - header
      - operation
    properties:
      header:
        description: Header to perform the operation on.
        type: string
        example: X-Custom-Header
      operation:
        description: Operation to be performed.
        type: string
        enum:
          - SET
          - APPEND
          - OVERWRITE
          - DELETE
      value:
        description: Transform the header to this value based on the operation type.
        type: string
        example: foo
#@endif # transformHeaders

#@ifdef transformQueryParams
  TransformQueryParamsPolicy:
    description: |
      Performs a list of query parameter operations on the request or response.
    type: object
    properties:
      items:
        description: Operation to be performed on the request or response query parameters.
        type: array
        items:
          $ref: "#/definitions/TransformQueryParamsPolicyItem"

  TransformQueryParamsPolicyItem:
    description: |
      Sets or deletes a query parameter.
    type: object
    required:
      - key
      - operation
    properties:
      key:
        description: Query parameter to perform the operation on.
        type: string
        example: arg
      operation:
        description: Operation to be performed.
        type: string
        enum:
          - SET
          - DELETE
      value:
        description: Transform the query parameter to this value based on the operation type.
        type: string
        example: foo
#@endif # transformQueryParams

  CorsPolicy:
    description: |
      Enable CORS (Cross-Origin-Resource-Sharing) request handling.
    type: object
    required:
      - allowedOrigins
    properties:
      allowedOrigins:
        description: |
          The list of allowed origins that the CORS handler will use to respond to CORS requests. The gateway will
          send the Access-Control-Allow-Origin header with the best origin match for the circumstances. '*' will match
          any origins, and 'null' will match queries from 'file:' origins. All other origins must be qualified with the
          scheme, full hostname, and port if necessary.
        type: array
        example: ["*", "null", "https://friendly.com:8080"]
        uniqueItems: true
        maxItems: 50
        items:
          type: string
      allowedMethods:
        description: |
          The list of allowed HTTP methods that will be returned for the preflight OPTIONS request in the
          Access-Control-Allow-Methods header. '*' will allow all methods.
        type: array
        default: []
        uniqueItems: true
        maxItems: 50
        items:
          type: string
        example: ["*", "GET", "POST"]
      allowedHeaders:
        description: |
          The list of headers that will be allowed from the client via the Access-Control-Allow-Headers header.
          '*' will allow all headers.
        type: array
        default: []
        uniqueItems: true
        maxItems: 50
        example: ["*", "Content-Type", "X-Foo-Bar"]
        items:
          type: string
      exposedHeaders:
        description: |
          The list of headers that the client will be allowed to see from the response as indicated by the
          Access-Control-Expose-Headers header. '*' will expose all headers.
        type: array
        maxItems: 50
        default: []
        example: ["*", "opc-request-id"]
        items:
          type: string
      isAllowCredentialsEnabled:
        description: |
          Whether to send the Access-Control-Allow-Credentials header to allow CORS requests with cookies.
        type: boolean
        default: false
        example: false
      maxAgeInSeconds:
        description: |
          The time in seconds for the client to cache preflight responses. This is sent as the Access-Control-Max-Age
          if greater than 0.
        type: integer
        default: 0
        example: 600
        minimum: 0

  AccessLogPolicy:
    description: |
      Configures the pushing of access logs to OCI Public Logging.
    type: object
    properties:
      isEnabled:
        description: Enables pushing of access logs to OCI Public Logging.
        default: false
        type: boolean

  ExecutionLogPolicy:
    description: |
      Configures the pushing of execution logs to OCI Public Logging.
    type: object
    properties:
      isEnabled:
        description: Enables pushing of execution logs to OCI Public Logging.
        default: false
        type: boolean
      logLevel:
        description: |
          Specifies the logging level, which affects the log entries pushed to
          OCI Public Logging if `isEnabled` is set to True.
        type: string
        default: INFO
        enum:
          - INFO
          - WARN
          - ERROR

  #==========[ ApiSpecification ]=======================================================================================

  ApiSpecificationRouteBackend:
    description: |
      The backend to forward requests to.
    type: object
    discriminator: type
    properties:
      type:
        description: Type of the API backend.
        type: string
        enum:
          - ORACLE_FUNCTIONS_BACKEND
          - HTTP_BACKEND
          - STOCK_RESPONSE_BACKEND
    required:
      - type

  HTTPBackend:
    description: |
      Send the request to an HTTP backend.
    allOf:
      - $ref: '#/definitions/ApiSpecificationRouteBackend'
      - type: "object"
        discriminator: HTTP_BACKEND
        required:
          - url
        properties:
          url:
            type: string
            format: uri
            example: https://1.2.3.4:9999
          connectTimeoutInSeconds:
            description: |
              Defines a timeout for establishing a connection with a proxied server.
            type: number
            format: float
            minimum: 1.0
            maximum: 75.0
            default: 60.0
          readTimeoutInSeconds:
            description: |
              Defines a timeout for reading a response from the proxied server.
            type: number
            format: float
            minimum: 1.0
            maximum: 300.0
            default: 10.0
          sendTimeoutInSeconds:
            description: |
              Defines a timeout for transmitting a request to the proxied server.
            type: number
            format: float
            minimum: 1.0
            maximum: 300.0
            default: 10.0
          isSslVerifyDisabled:
            description: |
              Defines whether or not to uphold SSL verification.
            type: boolean
            default: false

  OracleFunctionBackend:
    description: |
      Send the request to an Oracle Functions function.
    allOf:
      - $ref: '#/definitions/ApiSpecificationRouteBackend'
      - type: "object"
        discriminator: ORACLE_FUNCTIONS_BACKEND
        required:
          - functionId
        properties:
          functionId: *ref-functionOcid

  StockResponseBackend:
    description: |
      Send the request to a mock backend.
    allOf:
      - $ref: '#/definitions/ApiSpecificationRouteBackend'
      - type: "object"
        discriminator: STOCK_RESPONSE_BACKEND
        required:
          - status
        properties:
          body:
            description: The body of the stock response from the mock backend.
            type: string
            example: Hello World!
          status:
            description: The status code of the stock response from the mock backend.
            type: integer
            example: 200
            minimum: 0
            maximum: 999
          headers:
            description: The headers of the stock response from the mock backend.
            type: array
            default: []
            items:
              $ref: "#/definitions/HeaderFieldSpecification"
            maxItems: 50

  HeaderFieldSpecification:
    description: Header in key/value pair.
    type: object
    properties:
      name:
        description: Name of the header.
        type: string
        maxLength: 1024
        example: Content-Type
      value:
        description: Value of the header.
        type: string
        maxLength: 4096
        example: application/json

  ApiSpecificationRouteRequestPolicies:
    description: |
      Behavior applied to any requests received by the API on this route.
    type: object
    properties:
      authorization:
        $ref: "#/definitions/RouteAuthorizationPolicy"
      cors:
        $ref: "#/definitions/CorsPolicy"
#@ifdef validateHeaders
      validateHeaders:
        $ref: "#/definitions/ValidateHeadersPolicy"
#@endif # validateHeaders
#@ifdef validateQueryParams
      validateQueryParams:
        $ref: "#/definitions/ValidateQueryParamsPolicy"
#@endif # validateQueryParams
#@ifdef transformHeaders
      transformHeaders:
        $ref: "#/definitions/TransformHeadersPolicy"
#@endif # transformHeaders
#@ifdef transformQueryParams
      transformQueryParams:
        $ref: "#/definitions/TransformQueryParamsPolicy"
#@endif # transformQueryParams
#@ifdef responsePolicies
  ApiSpecificationRouteResponsePolicies:
    description: |
      Behavior applied to any responses sent by the API for requests on this route.
    type: object
    properties:
#@ifdef transformHeaders
      transformHeaders:
        $ref: "#/definitions/TransformHeadersPolicy"
#@endif # transformHeaders
#@endif # responsePolicies

  ApiSpecificationLoggingPolicies:
    description: |
      Policies controlling the pushing of logs to OCI Public Logging.
    type: object
    properties:
      accessLog:
        $ref: "#/definitions/AccessLogPolicy"
      executionLog:
        $ref: "#/definitions/ExecutionLogPolicy"

  ApiSpecificationRoute:
    description: |
      A single route that forwards requests to a particular backend and may contain some additional policies.
    type: "object"
    required:
      - path
      - backend
    properties:
      path:
        description: |
          A URL path pattern that must be matched on this route. The path pattern may contain a subset of RFC 6570 identifiers
          to allow wildcard and parameterized matching.
        type: "string"
        example: "/todos"
      methods:
        description: |
          A list of allowed methods on this route.
        type: "array"
        uniqueItems: true
        default: ["ANY"]
        items:
          type: string
          enum:
            - ANY
            - HEAD
            - GET
            - POST
            - PUT
            - PATCH
            - DELETE
            - OPTIONS
      requestPolicies:
        $ref: "#/definitions/ApiSpecificationRouteRequestPolicies"
#@ifdef responsePolicies
      responsePolicies:
        $ref: "#/definitions/ApiSpecificationRouteResponsePolicies"
#@endif # responsePolicies
      loggingPolicies:
        $ref: "#/definitions/ApiSpecificationLoggingPolicies"
      backend:
        $ref: "#/definitions/ApiSpecificationRouteBackend"

  ApiSpecificationRequestPolicies:
    description: Global behavior applied to all requests received by the API.
    type: object
    properties:
      authentication:
        $ref: "#/definitions/AuthenticationPolicy"
      rateLimiting:
        $ref: "#/definitions/RateLimitingPolicy"
      cors:
        $ref: "#/definitions/CorsPolicy"
#@ifdef validateHeaders
      validateHeaders:
        $ref: "#/definitions/ValidateHeadersPolicy"
#@endif # validateHeaders
#@ifdef validateQueryParams
      validateQueryParams:
        $ref: "#/definitions/ValidateQueryParamsPolicy"
#@endif # validateQueryParams
#@ifdef transformHeaders
      transformHeaders:
        $ref: "#/definitions/TransformHeadersPolicy"
#@endif # transformHeaders
#@ifdef transformQueryParams
      transformQueryParams:
        $ref: "#/definitions/TransformQueryParamsPolicy"
#@endif # transformQueryParams

#@ifdef responsePolicies
  ApiSpecificationResponsePolicies:
    description: Global behavior applied to all responses sent by the API.
    type: object
    properties:
#@ifdef transformHeaders
      transformHeaders:
        $ref: "#/definitions/TransformHeadersPolicy"
#@endif # transformHeaders
#@endif # responsePolicies

  ApiSpecification:
    description: The logical configuration of the API exposed by a deployment.
    type: object
    properties:
      requestPolicies:
        $ref: "#/definitions/ApiSpecificationRequestPolicies"
#@ifdef responsePolicies
      responsePolicies:
        $ref: "#/definitions/ApiSpecificationResponsePolicies"
#@endif # responsePolicies
      loggingPolicies:
        $ref: "#/definitions/ApiSpecificationLoggingPolicies"
      routes:
        description: A list of routes that this API exposes.
        type: "array"
        items:
          $ref: "#/definitions/ApiSpecificationRoute"

  Api:
    description: |
      An API is a ......., see [API Gateway Concepts](/iaas/Content/APIGateway/Concepts/apigatewayconcepts.htm).
    type: object
    required:
      - id
      - compartmentId
    x-obmcs-splat:
      resourceKind: api-apis
      adLocality: regional
    properties:
      id: *ref-ocid
      displayName: *ref-displayName
      compartmentId: *ref-compartmentOcid
      timeCreated: *ref-timeCreated
      timeUpdated: *ref-timeUpdated
      lifecycleState:
        description: The current state of the API.
        enum:
          - CREATING
          - ACTIVE
          - UPDATING
          - DELETING
          - DELETED
          - FAILED
        type: string
      lifecycleDetails:
        description: |
          A message describing the current state in more detail.
          For example, can be used to provide actionable information for a
          resource in a Failed state.
        type: string
      apiSpec:
        description: Type of API Specification file.
        type: string
      apiSpecUrl:
        description: Url to retrieve raw API Specification file
        type: string
      apiSpecStatus:
        description: Correctness and validity of the API.
        enum:
          - INVALID
          - VALID
          - READY
        type: string
      apiSpecStatusDetails:
        description: |
          A message describing the current API Specification status in more detail.
          For example, it can be used to provide hints on failed validation.
        type: string
      freeformTags: *ref-freeformTags
      definedTags: *ref-definedTags

      
  ApiCollection:
    description: Collection of API summaries.
    type: object
    required:
      - items
    properties:
      items:
        description: API summaries.
        type: array
        items:
          $ref: '#/definitions/ApiSummary'

  ApiSummary:
    description: A summary of the API.
    type: object
    required:
      - id
      - compartmentId
    properties:
      id: *ref-ocid
      displayName: *ref-displayName
      compartmentId: *ref-compartmentOcid
      timeCreated: *ref-timeCreated
      timeUpdated: *ref-timeUpdated
      lifecycleState:
        description: The current state of the API.
        type: string
        x-obmcs-enumref: '#/definitions/Api/lifecycleState'
      lifecycleDetails:
        description: |
          A message describing the current state in more detail.
          For example, can be used to provide actionable information for a
          resource in a Failed state.
        type: string
      apiSpecStatus:
        description: Correctness and validity of the API.
        type: string
        x-obmcs-enumref: '#/definitions/Api/apiSpecStatus'
      freeformTags: *ref-freeformTags
      definedTags: *ref-definedTags

  CreateApiDetails:
    description: Information about the new API.
    type: object
    required:
      - compartmentId
    properties:
      displayName: *ref-displayName
      compartmentId: *ref-compartmentOcid
      freeformTags: *ref-freeformTags
      definedTags: *ref-definedTags
      content:
        description: API Spec content in json or yaml format
        type: string

  UpdateApiDetails:
    description: The information to be updated.
    type: object
    properties:
      displayName: *ref-displayName
      freeformTags: *ref-freeformTags
      definedTags: *ref-definedTags
      content:
        description: API Spec content in json or yaml format
        type: string

  ChangeApiCompartmentDetails:
    description: The new compartment details for the API.
    type: object
    required:
      - compartmentId
    properties:
      compartmentId: *ref-compartmentOcid

#==========[ Parameters ]================================================================================================
parameters:
  GatewayIdentifierPathParam:
    name: gatewayId
    type: string
    in: path
    required: true
    description: The ocid of the gateway.

  DeploymentIdentifierPathParam:
    name: deploymentId
    type: string
    in: path
    required: true
    description: The ocid of the deployment.

  PaginationLimitQueryParam:
    name: limit
    in: query
    type: integer
    minimum: 1
    maximum: 1000
    description: The maximum number of items to return.
    default: 100

  PaginationTokenQueryParam:
    name: page
    in: query
    type: string
    minLength: 1
    maxLength: 1024
    description: The page token representing the page at which to start retrieving results. This is usually retrieved from a previous list call.
    default: "null"

  SortOrderQueryParam:
    name: sortOrder
    in: query
    type: string
    enum:
      - ASC
      - DESC
    description: The sort order to use, either 'asc' or 'desc'. The default order depends on the sortBy value.
    default: ASC

  SortByQueryParam:
    name: sortBy
    in: query
    type: string
    enum:
      - timeCreated
      - displayName
    description: |
      The field to sort by. You can provide one sort order (`sortOrder`).
      Default order for `timeCreated` is descending. Default order for
      `displayName` is ascending. The `displayName` sort order is case
      sensitive.
    default: timeCreated

  WorkRequestIdPathParam:
    name: workRequestId
    in: path
    required: true
    type: string
    description: The ocid of the asynchronous request.

  CompartmentIdQueryParam:
    name: compartmentId
    in: query
    required: true
    type: string
    description: The ocid of the compartment in which to list resources.

  ResourceIdQueryParam:
    name: resourceId
    in: query
    required: false
    type: string
    description: Filter work requests by the resource ocid.
    default: "null"

  GatewayIdQueryParam:
    name: gatewayId
    in: query
    type: string
    description: Filter deployments by the gateway ocid.
    default: "null"

  DisplayNameQueryParam:
    in: query
    maxLength: 255
    minLength: 1
    name: displayName
    type: string
    description: |
      A user-friendly name. Does not have to be unique, and it's changeable.

      Example: `My new resource`
    default: "null"

  GatewayLifecycleStateQueryParam:
    name: lifecycleState
    in: query
    required: false
    type: string
    x-obmcs-enumref: "#/definitions/Gateway/lifecycleState"
    description: |
      A filter to return only resources that match the given lifecycle state.

      Example: `SUCCEEDED`
    default: "null"

  DeploymentLifecycleStateQueryParam:
    name: lifecycleState
    in: query
    required: false
    type: string
    x-obmcs-enumref: "#/definitions/Deployment/lifecycleState"
    description: |
      A filter to return only resources that match the given lifecycle state.

      Example: `SUCCEEDED`
    default: "null"

  RequestIdHeader:
    name: opc-request-id
    in: header
    type: string
    description: The client request id for tracing.
    default: "null"

  RetryTokenHeader:
    description: |
      A token that uniquely identifies a request so it can be retried in case of a timeout or
      server error without risk of executing that same action again. Retry tokens expire after 24
      hours, but can be invalidated before then due to conflicting operations. For example, if a resource
      has been deleted and purged from the system, then a retry of the original creation request
      might be rejected.
    in: header
    maxLength: 64
    minLength: 1
    name: opc-retry-token
    type: string
    default: "null"

  IfMatchHeader:
    description: |
      For optimistic concurrency control. In the PUT or DELETE call
      for a resource, set the `if-match` parameter to the value of the
      etag from a previous GET or POST response for that resource.
      The resource will be updated or deleted only if the etag you
      provide matches the resource's current etag value.
    in: header
    name: if-match
    type: string
    default: "null"

  ApiIdentifierPathParam:
    name: apiId
    type: string
    in: path
    required: true
    description: The ocid of the API.

  ApiLifecycleStateQueryParam:
    name: lifecycleState
    in: query
    required: false
    type: string
    x-obmcs-enumref: "#/definitions/Api/lifecycleState"
    description: |
      A filter to return only resources that match the given lifecycle state.

      Example: `SUCCEEDED`
    default: "null"

  ApiSpecStatusQueryParam:
    name: apiSpecStatus
    in: query
    required: false
    type: string
    x-obmcs-enumref: "#/definitions/Api/apiSpecStatus"
    description: |
      A filter to return only APIs that match the given status.

      Example: `READY`
    default: "null"


#==========[ Responses ]================================================================================================
responses:
  400:
    description: Bad Request
    headers:
      opc-request-id: *ref-opc-request-id
    schema:
      $ref: '#/definitions/Error'
  401:
    description: NotAuthenticated
    headers:
      opc-request-id: *ref-opc-request-id
    schema:
      $ref: '#/definitions/Error'
  404:
    description: NotAuthorizedOrNotFound
    headers:
      opc-request-id: *ref-opc-request-id
    schema:
      $ref: '#/definitions/Error'
  409:
    description: NotAuthorizedOrResourceAlreadyExists
    headers:
      opc-request-id: *ref-opc-request-id
    schema:
      $ref: '#/definitions/Error'
  412:
    description: NoEtagMatch
    headers:
      opc-request-id: *ref-opc-request-id
    schema:
      $ref: '#/definitions/Error'
  429:
    description: TooManyRequests
    headers:
      opc-request-id: *ref-opc-request-id
    schema:
      $ref: '#/definitions/Error'
  500:
    description: InternalServerError
    headers:
      opc-request-id: *ref-opc-request-id
    schema:
      $ref: '#/definitions/Error'
  default:
    description: UnknownError
    headers:
      opc-request-id: *ref-opc-request-id
    schema:
      $ref: '#/definitions/Error'